{
	"id": "cd8e492fe03dc042acbaefec45c8bd2e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NftDeployer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ninterface IGenerator {\r\n    function getLuckyReward(address _user) external;\r\n}\r\ncontract NftStaker is Ownable {\r\n    IERC1155 public parentNFT;\r\n    address generatorAddr;\r\n\r\n\r\n    struct Stake {\r\n        uint256 tokenId;\r\n        uint256 amount;\r\n        uint256 timestamp;\r\n    }\r\n\r\n    constructor(){\r\n        parentNFT = IERC1155(0xd8b934580fcE35a11B58C6D73aDeE468a2833fa8);\r\n    }\r\n\r\n    function setGenerator(address _generator) public onlyOwner {\r\n       generatorAddr = _generator;\r\n    }\r\n\r\n    function getLuckyReward(address _user) private {\r\n        IGenerator(generatorAddr).getLuckyReward(_user);\r\n    }\r\n\r\n    // map staker address to stake details\r\n    mapping(address => Stake) public stakes;\r\n\r\n    // map staker to total staking time \r\n    mapping(address => uint256) public stakingTime;    \r\n\r\n\r\n    function stake(uint256 _tokenId, uint256 _amount) public {\r\n        stakes[msg.sender] = Stake(_tokenId, _amount, block.timestamp); \r\n        parentNFT.safeTransferFrom(msg.sender, address(this), _tokenId, _amount, \"0x00\");\r\n    } \r\n\r\n    function unstake() public {\r\n        parentNFT.safeTransferFrom(address(this), msg.sender, stakes[msg.sender].tokenId, stakes[msg.sender].amount, \"0x00\");\r\n        stakingTime[msg.sender] += (block.timestamp - stakes[msg.sender].timestamp);\r\n        delete stakes[msg.sender];\r\n        getLuckyReward(msg.sender);\r\n    }      \r\n\r\n     function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4) {\r\n        return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"));\r\n    }\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NftDeployer.sol": {
				"IGenerator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getLuckyReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getLuckyReward(address)": "d34f6e72"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getLuckyReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftDeployer.sol\":\"IGenerator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NftDeployer.sol\":{\"keccak256\":\"0x71ee9cd2833028002270e58fd3c1f4e53eb3fd62d676ecfe9811ee1f705328ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1e76619417fa5ba07148f9a9c9ecc165f174c816accf2572fd9d92c6f5b2aaf\",\"dweb:/ipfs/QmZpKaF5PPXPTMVV7xTiig31C9czCPj9JyWZLvxjRYmokV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NftStaker": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFT",
							"outputs": [
								{
									"internalType": "contract IERC1155",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_generator",
									"type": "address"
								}
							],
							"name": "setGenerator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NftDeployer.sol\":344:1951  contract NftStaker is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NftDeployer.sol\":553:649  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/NftDeployer.sol\":598:640  0xd8b934580fcE35a11B58C6D73aDeE468a2833fa8 */\n  0xd8b934580fce35a11b58c6d73adee468a2833fa8\n    /* \"contracts/NftDeployer.sol\":577:586  parentNFT */\n  0x01\n  0x00\n    /* \"contracts/NftDeployer.sol\":577:641  parentNFT = IERC1155(0xd8b934580fcE35a11B58C6D73aDeE468a2833fa8) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NftDeployer.sol\":344:1951  contract NftStaker is Ownable {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/NftDeployer.sol\":344:1951  contract NftStaker is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NftDeployer.sol\":344:1951  contract NftStaker is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0472f0\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb8e33fb2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4a7c7e4b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x583d42fd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NftDeployer.sol\":933:972  mapping(address => Stake) public stakes */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftDeployer.sol\":1323:1643  function unstake() public {... */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/NftDeployer.sol\":657:760  function setGenerator(address _generator) public onlyOwner {... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/NftDeployer.sol\":1023:1069  mapping(address => uint256) public stakingTime */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/NftDeployer.sol\":1084:1314  function stake(uint256 _tokenId, uint256 _amount) public {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftDeployer.sol\":381:406  IERC1155 public parentNFT */\n    tag_10:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftDeployer.sol\":1658:1946  function onERC1155Received(... */\n    tag_11:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/NftDeployer.sol\":933:972  mapping(address => Stake) public stakes */\n    tag_17:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/NftDeployer.sol\":1323:1643  function unstake() public {... */\n    tag_21:\n        /* \"contracts/NftDeployer.sol\":1360:1369  parentNFT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftDeployer.sol\":1360:1386  parentNFT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"contracts/NftDeployer.sol\":1395:1399  this */\n      address\n        /* \"contracts/NftDeployer.sol\":1402:1412  msg.sender */\n      caller\n        /* \"contracts/NftDeployer.sol\":1414:1420  stakes */\n      0x03\n        /* \"contracts/NftDeployer.sol\":1414:1432  stakes[msg.sender] */\n      0x00\n        /* \"contracts/NftDeployer.sol\":1421:1431  msg.sender */\n      caller\n        /* \"contracts/NftDeployer.sol\":1414:1432  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftDeployer.sol\":1414:1440  stakes[msg.sender].tokenId */\n      0x00\n      add\n      sload\n        /* \"contracts/NftDeployer.sol\":1442:1448  stakes */\n      0x03\n        /* \"contracts/NftDeployer.sol\":1442:1460  stakes[msg.sender] */\n      0x00\n        /* \"contracts/NftDeployer.sol\":1449:1459  msg.sender */\n      caller\n        /* \"contracts/NftDeployer.sol\":1442:1460  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftDeployer.sol\":1442:1467  stakes[msg.sender].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NftDeployer.sol\":1360:1476  parentNFT.safeTransferFrom(address(this), msg.sender, stakes[msg.sender].tokenId, stakes[msg.sender].amount, \"0x00\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftDeployer.sol\":1533:1539  stakes */\n      0x03\n        /* \"contracts/NftDeployer.sol\":1533:1551  stakes[msg.sender] */\n      0x00\n        /* \"contracts/NftDeployer.sol\":1540:1550  msg.sender */\n      caller\n        /* \"contracts/NftDeployer.sol\":1533:1551  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftDeployer.sol\":1533:1561  stakes[msg.sender].timestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/NftDeployer.sol\":1515:1530  block.timestamp */\n      timestamp\n        /* \"contracts/NftDeployer.sol\":1515:1561  block.timestamp - stakes[msg.sender].timestamp */\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"contracts/NftDeployer.sol\":1487:1498  stakingTime */\n      0x04\n        /* \"contracts/NftDeployer.sol\":1487:1510  stakingTime[msg.sender] */\n      0x00\n        /* \"contracts/NftDeployer.sol\":1499:1509  msg.sender */\n      caller\n        /* \"contracts/NftDeployer.sol\":1487:1510  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NftDeployer.sol\":1487:1562  stakingTime[msg.sender] += (block.timestamp - stakes[msg.sender].timestamp) */\n      dup3\n      dup3\n      sload\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftDeployer.sol\":1580:1586  stakes */\n      0x03\n        /* \"contracts/NftDeployer.sol\":1580:1598  stakes[msg.sender] */\n      0x00\n        /* \"contracts/NftDeployer.sol\":1587:1597  msg.sender */\n      caller\n        /* \"contracts/NftDeployer.sol\":1580:1598  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NftDeployer.sol\":1573:1598  delete stakes[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/NftDeployer.sol\":1609:1635  getLuckyReward(msg.sender) */\n      tag_63\n        /* \"contracts/NftDeployer.sol\":1624:1634  msg.sender */\n      caller\n        /* \"contracts/NftDeployer.sol\":1609:1623  getLuckyReward */\n      tag_64\n        /* \"contracts/NftDeployer.sol\":1609:1635  getLuckyReward(msg.sender) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/NftDeployer.sol\":1323:1643  function unstake() public {... */\n      jump\t// out\n        /* \"contracts/NftDeployer.sol\":657:760  function setGenerator(address _generator) public onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/NftDeployer.sol\":742:752  _generator */\n      dup1\n        /* \"contracts/NftDeployer.sol\":726:739  generatorAddr */\n      0x02\n      0x00\n        /* \"contracts/NftDeployer.sol\":726:752  generatorAddr = _generator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftDeployer.sol\":657:760  function setGenerator(address _generator) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NftDeployer.sol\":1023:1069  mapping(address => uint256) public stakingTime */\n    tag_27:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NftDeployer.sol\":1084:1314  function stake(uint256 _tokenId, uint256 _amount) public {... */\n    tag_35:\n        /* \"contracts/NftDeployer.sol\":1173:1214  Stake(_tokenId, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NftDeployer.sol\":1179:1187  _tokenId */\n      dup4\n        /* \"contracts/NftDeployer.sol\":1173:1214  Stake(_tokenId, _amount, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftDeployer.sol\":1189:1196  _amount */\n      dup3\n        /* \"contracts/NftDeployer.sol\":1173:1214  Stake(_tokenId, _amount, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftDeployer.sol\":1198:1213  block.timestamp */\n      timestamp\n        /* \"contracts/NftDeployer.sol\":1173:1214  Stake(_tokenId, _amount, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NftDeployer.sol\":1152:1158  stakes */\n      0x03\n        /* \"contracts/NftDeployer.sol\":1152:1170  stakes[msg.sender] */\n      0x00\n        /* \"contracts/NftDeployer.sol\":1159:1169  msg.sender */\n      caller\n        /* \"contracts/NftDeployer.sol\":1152:1170  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftDeployer.sol\":1152:1214  stakes[msg.sender] = Stake(_tokenId, _amount, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/NftDeployer.sol\":1226:1235  parentNFT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftDeployer.sol\":1226:1252  parentNFT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"contracts/NftDeployer.sol\":1253:1263  msg.sender */\n      caller\n        /* \"contracts/NftDeployer.sol\":1273:1277  this */\n      address\n        /* \"contracts/NftDeployer.sol\":1280:1288  _tokenId */\n      dup6\n        /* \"contracts/NftDeployer.sol\":1290:1297  _amount */\n      dup6\n        /* \"contracts/NftDeployer.sol\":1226:1306  parentNFT.safeTransferFrom(msg.sender, address(this), _tokenId, _amount, \"0x00\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_75:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftDeployer.sol\":1084:1314  function stake(uint256 _tokenId, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NftDeployer.sol\":381:406  IERC1155 public parentNFT */\n    tag_41:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NftDeployer.sol\":1658:1946  function onERC1155Received(... */\n    tag_47:\n        /* \"contracts/NftDeployer.sol\":1835:1841  bytes4 */\n      0x00\n        /* \"contracts/NftDeployer.sol\":1868:1937  keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\") */\n      0xf23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97\n        /* \"contracts/NftDeployer.sol\":1854:1938  return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\")) */\n      swap1\n      pop\n        /* \"contracts/NftDeployer.sol\":1658:1946  function onERC1155Received(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NftDeployer.sol\":768:881  function getLuckyReward(address _user) private {... */\n    tag_64:\n        /* \"contracts/NftDeployer.sol\":837:850  generatorAddr */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftDeployer.sol\":826:866  IGenerator(generatorAddr).getLuckyReward */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd34f6e72\n        /* \"contracts/NftDeployer.sol\":867:872  _user */\n      dup3\n        /* \"contracts/NftDeployer.sol\":826:873  IGenerator(generatorAddr).getLuckyReward(_user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_89:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftDeployer.sol\":768:881  function getLuckyReward(address _user) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_103:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_104:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_105:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_106:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_140\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_105\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_107:\n        /* \"#utility.yul\":641:665   */\n      tag_142\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_106\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_143:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_108:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_145\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_107\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_16:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_148\n      tag_103\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":917:1036   */\n    tag_147:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_149\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_108\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_109:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_110:\n        /* \"#utility.yul\":1346:1370   */\n      tag_152\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_109\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1825   */\n    tag_19:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x60\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_154\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup7\n        /* \"#utility.yul\":1583:1654   */\n      tag_110\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1664:1736   */\n      tag_155\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1721:1730   */\n      dup4\n        /* \"#utility.yul\":1717:1735   */\n      add\n        /* \"#utility.yul\":1708:1714   */\n      dup6\n        /* \"#utility.yul\":1664:1736   */\n      tag_110\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1746:1818   */\n      tag_156\n        /* \"#utility.yul\":1814:1816   */\n      0x40\n        /* \"#utility.yul\":1803:1812   */\n      dup4\n        /* \"#utility.yul\":1799:1817   */\n      add\n        /* \"#utility.yul\":1790:1796   */\n      dup5\n        /* \"#utility.yul\":1746:1818   */\n      tag_110\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1383:1825   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:2053   */\n    tag_29:\n        /* \"#utility.yul\":1924:1928   */\n      0x00\n        /* \"#utility.yul\":1962:1964   */\n      0x20\n        /* \"#utility.yul\":1951:1960   */\n      dup3\n        /* \"#utility.yul\":1947:1965   */\n      add\n        /* \"#utility.yul\":1939:1965   */\n      swap1\n      pop\n        /* \"#utility.yul\":1975:2046   */\n      tag_158\n        /* \"#utility.yul\":2043:2044   */\n      0x00\n        /* \"#utility.yul\":2032:2041   */\n      dup4\n        /* \"#utility.yul\":2028:2045   */\n      add\n        /* \"#utility.yul\":2019:2025   */\n      dup5\n        /* \"#utility.yul\":1975:2046   */\n      tag_110\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1831:2053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2181   */\n    tag_111:\n        /* \"#utility.yul\":2132:2156   */\n      tag_160\n        /* \"#utility.yul\":2150:2155   */\n      dup2\n        /* \"#utility.yul\":2132:2156   */\n      tag_109\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2125:2130   */\n      dup2\n        /* \"#utility.yul\":2122:2157   */\n      eq\n        /* \"#utility.yul\":2112:2175   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2171:2172   */\n      0x00\n        /* \"#utility.yul\":2168:2169   */\n      dup1\n        /* \"#utility.yul\":2161:2173   */\n      revert\n        /* \"#utility.yul\":2112:2175   */\n    tag_161:\n        /* \"#utility.yul\":2059:2181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2326   */\n    tag_112:\n        /* \"#utility.yul\":2233:2238   */\n      0x00\n        /* \"#utility.yul\":2271:2277   */\n      dup2\n        /* \"#utility.yul\":2258:2278   */\n      calldataload\n        /* \"#utility.yul\":2249:2278   */\n      swap1\n      pop\n        /* \"#utility.yul\":2287:2320   */\n      tag_163\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2287:2320   */\n      tag_111\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2187:2326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2806   */\n    tag_34:\n        /* \"#utility.yul\":2400:2406   */\n      0x00\n        /* \"#utility.yul\":2408:2414   */\n      dup1\n        /* \"#utility.yul\":2457:2459   */\n      0x40\n        /* \"#utility.yul\":2445:2454   */\n      dup4\n        /* \"#utility.yul\":2436:2443   */\n      dup6\n        /* \"#utility.yul\":2432:2455   */\n      sub\n        /* \"#utility.yul\":2428:2460   */\n      slt\n        /* \"#utility.yul\":2425:2544   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2463:2542   */\n      tag_166\n      tag_103\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2425:2544   */\n    tag_165:\n        /* \"#utility.yul\":2583:2584   */\n      0x00\n        /* \"#utility.yul\":2608:2661   */\n      tag_167\n        /* \"#utility.yul\":2653:2660   */\n      dup6\n        /* \"#utility.yul\":2644:2650   */\n      dup3\n        /* \"#utility.yul\":2633:2642   */\n      dup7\n        /* \"#utility.yul\":2629:2651   */\n      add\n        /* \"#utility.yul\":2608:2661   */\n      tag_112\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2598:2661   */\n      swap3\n      pop\n        /* \"#utility.yul\":2554:2671   */\n      pop\n        /* \"#utility.yul\":2710:2712   */\n      0x20\n        /* \"#utility.yul\":2736:2789   */\n      tag_168\n        /* \"#utility.yul\":2781:2788   */\n      dup6\n        /* \"#utility.yul\":2772:2778   */\n      dup3\n        /* \"#utility.yul\":2761:2770   */\n      dup7\n        /* \"#utility.yul\":2757:2779   */\n      add\n        /* \"#utility.yul\":2736:2789   */\n      tag_112\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2726:2789   */\n      swap2\n      pop\n        /* \"#utility.yul\":2681:2799   */\n      pop\n        /* \"#utility.yul\":2332:2806   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2812:2930   */\n    tag_113:\n        /* \"#utility.yul\":2899:2923   */\n      tag_170\n        /* \"#utility.yul\":2917:2922   */\n      dup2\n        /* \"#utility.yul\":2899:2923   */\n      tag_106\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2894:2897   */\n      dup3\n        /* \"#utility.yul\":2887:2924   */\n      mstore\n        /* \"#utility.yul\":2812:2930   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2936:3158   */\n    tag_39:\n        /* \"#utility.yul\":3029:3033   */\n      0x00\n        /* \"#utility.yul\":3067:3069   */\n      0x20\n        /* \"#utility.yul\":3056:3065   */\n      dup3\n        /* \"#utility.yul\":3052:3070   */\n      add\n        /* \"#utility.yul\":3044:3070   */\n      swap1\n      pop\n        /* \"#utility.yul\":3080:3151   */\n      tag_172\n        /* \"#utility.yul\":3148:3149   */\n      0x00\n        /* \"#utility.yul\":3137:3146   */\n      dup4\n        /* \"#utility.yul\":3133:3150   */\n      add\n        /* \"#utility.yul\":3124:3130   */\n      dup5\n        /* \"#utility.yul\":3080:3151   */\n      tag_113\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2936:3158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3164:3224   */\n    tag_114:\n        /* \"#utility.yul\":3192:3195   */\n      0x00\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3206:3218   */\n      swap1\n      pop\n        /* \"#utility.yul\":3164:3224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3372   */\n    tag_115:\n        /* \"#utility.yul\":3280:3289   */\n      0x00\n        /* \"#utility.yul\":3313:3366   */\n      tag_175\n        /* \"#utility.yul\":3331:3365   */\n      tag_176\n        /* \"#utility.yul\":3340:3364   */\n      tag_177\n        /* \"#utility.yul\":3358:3363   */\n      dup5\n        /* \"#utility.yul\":3340:3364   */\n      tag_105\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3331:3365   */\n      tag_114\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3313:3366   */\n      tag_105\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3300:3366   */\n      swap1\n      pop\n        /* \"#utility.yul\":3230:3372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3378:3504   */\n    tag_116:\n        /* \"#utility.yul\":3428:3437   */\n      0x00\n        /* \"#utility.yul\":3461:3498   */\n      tag_179\n        /* \"#utility.yul\":3492:3497   */\n      dup3\n        /* \"#utility.yul\":3461:3498   */\n      tag_115\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3448:3498   */\n      swap1\n      pop\n        /* \"#utility.yul\":3378:3504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3510:3652   */\n    tag_117:\n        /* \"#utility.yul\":3576:3585   */\n      0x00\n        /* \"#utility.yul\":3609:3646   */\n      tag_181\n        /* \"#utility.yul\":3640:3645   */\n      dup3\n        /* \"#utility.yul\":3609:3646   */\n      tag_116\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3596:3646   */\n      swap1\n      pop\n        /* \"#utility.yul\":3510:3652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3658:3821   */\n    tag_118:\n        /* \"#utility.yul\":3761:3814   */\n      tag_183\n        /* \"#utility.yul\":3808:3813   */\n      dup2\n        /* \"#utility.yul\":3761:3814   */\n      tag_117\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3815   */\n      mstore\n        /* \"#utility.yul\":3658:3821   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3827:4081   */\n    tag_43:\n        /* \"#utility.yul\":3936:3940   */\n      0x00\n        /* \"#utility.yul\":3974:3976   */\n      0x20\n        /* \"#utility.yul\":3963:3972   */\n      dup3\n        /* \"#utility.yul\":3959:3977   */\n      add\n        /* \"#utility.yul\":3951:3977   */\n      swap1\n      pop\n        /* \"#utility.yul\":3987:4074   */\n      tag_185\n        /* \"#utility.yul\":4071:4072   */\n      0x00\n        /* \"#utility.yul\":4060:4069   */\n      dup4\n        /* \"#utility.yul\":4056:4073   */\n      add\n        /* \"#utility.yul\":4047:4053   */\n      dup5\n        /* \"#utility.yul\":3987:4074   */\n      tag_118\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3827:4081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4087:4204   */\n    tag_119:\n        /* \"#utility.yul\":4196:4197   */\n      0x00\n        /* \"#utility.yul\":4193:4194   */\n      dup1\n        /* \"#utility.yul\":4186:4198   */\n      revert\n        /* \"#utility.yul\":4210:4327   */\n    tag_120:\n        /* \"#utility.yul\":4319:4320   */\n      0x00\n        /* \"#utility.yul\":4316:4317   */\n      dup1\n        /* \"#utility.yul\":4309:4321   */\n      revert\n        /* \"#utility.yul\":4333:4450   */\n    tag_121:\n        /* \"#utility.yul\":4442:4443   */\n      0x00\n        /* \"#utility.yul\":4439:4440   */\n      dup1\n        /* \"#utility.yul\":4432:4444   */\n      revert\n        /* \"#utility.yul\":4469:5021   */\n    tag_122:\n        /* \"#utility.yul\":4526:4534   */\n      0x00\n        /* \"#utility.yul\":4536:4542   */\n      dup1\n        /* \"#utility.yul\":4586:4589   */\n      dup4\n        /* \"#utility.yul\":4579:4583   */\n      0x1f\n        /* \"#utility.yul\":4571:4577   */\n      dup5\n        /* \"#utility.yul\":4567:4584   */\n      add\n        /* \"#utility.yul\":4563:4590   */\n      slt\n        /* \"#utility.yul\":4553:4675   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":4594:4673   */\n      tag_191\n      tag_119\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4553:4675   */\n    tag_190:\n        /* \"#utility.yul\":4707:4713   */\n      dup3\n        /* \"#utility.yul\":4694:4714   */\n      calldataload\n        /* \"#utility.yul\":4684:4714   */\n      swap1\n      pop\n        /* \"#utility.yul\":4737:4755   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4729:4735   */\n      dup2\n        /* \"#utility.yul\":4726:4756   */\n      gt\n        /* \"#utility.yul\":4723:4840   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":4759:4838   */\n      tag_193\n      tag_120\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4723:4840   */\n    tag_192:\n        /* \"#utility.yul\":4873:4877   */\n      0x20\n        /* \"#utility.yul\":4865:4871   */\n      dup4\n        /* \"#utility.yul\":4861:4878   */\n      add\n        /* \"#utility.yul\":4849:4878   */\n      swap2\n      pop\n        /* \"#utility.yul\":4927:4930   */\n      dup4\n        /* \"#utility.yul\":4919:4923   */\n      0x01\n        /* \"#utility.yul\":4911:4917   */\n      dup3\n        /* \"#utility.yul\":4907:4924   */\n      mul\n        /* \"#utility.yul\":4897:4905   */\n      dup4\n        /* \"#utility.yul\":4893:4925   */\n      add\n        /* \"#utility.yul\":4890:4931   */\n      gt\n        /* \"#utility.yul\":4887:5015   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":4934:5013   */\n      tag_195\n      tag_121\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4887:5015   */\n    tag_194:\n        /* \"#utility.yul\":4469:5021   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5027:6136   */\n    tag_46:\n        /* \"#utility.yul\":5133:5139   */\n      0x00\n        /* \"#utility.yul\":5141:5147   */\n      dup1\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      dup1\n        /* \"#utility.yul\":5165:5171   */\n      0x00\n        /* \"#utility.yul\":5173:5179   */\n      dup1\n        /* \"#utility.yul\":5222:5225   */\n      0xa0\n        /* \"#utility.yul\":5210:5219   */\n      dup8\n        /* \"#utility.yul\":5201:5208   */\n      dup10\n        /* \"#utility.yul\":5197:5220   */\n      sub\n        /* \"#utility.yul\":5193:5226   */\n      slt\n        /* \"#utility.yul\":5190:5310   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":5229:5308   */\n      tag_198\n      tag_103\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5190:5310   */\n    tag_197:\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5374:5427   */\n      tag_199\n        /* \"#utility.yul\":5419:5426   */\n      dup10\n        /* \"#utility.yul\":5410:5416   */\n      dup3\n        /* \"#utility.yul\":5399:5408   */\n      dup11\n        /* \"#utility.yul\":5395:5417   */\n      add\n        /* \"#utility.yul\":5374:5427   */\n      tag_108\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5364:5427   */\n      swap7\n      pop\n        /* \"#utility.yul\":5320:5437   */\n      pop\n        /* \"#utility.yul\":5476:5478   */\n      0x20\n        /* \"#utility.yul\":5502:5555   */\n      tag_200\n        /* \"#utility.yul\":5547:5554   */\n      dup10\n        /* \"#utility.yul\":5538:5544   */\n      dup3\n        /* \"#utility.yul\":5527:5536   */\n      dup11\n        /* \"#utility.yul\":5523:5545   */\n      add\n        /* \"#utility.yul\":5502:5555   */\n      tag_108\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5492:5555   */\n      swap6\n      pop\n        /* \"#utility.yul\":5447:5565   */\n      pop\n        /* \"#utility.yul\":5604:5606   */\n      0x40\n        /* \"#utility.yul\":5630:5683   */\n      tag_201\n        /* \"#utility.yul\":5675:5682   */\n      dup10\n        /* \"#utility.yul\":5666:5672   */\n      dup3\n        /* \"#utility.yul\":5655:5664   */\n      dup11\n        /* \"#utility.yul\":5651:5673   */\n      add\n        /* \"#utility.yul\":5630:5683   */\n      tag_112\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5620:5683   */\n      swap5\n      pop\n        /* \"#utility.yul\":5575:5693   */\n      pop\n        /* \"#utility.yul\":5732:5734   */\n      0x60\n        /* \"#utility.yul\":5758:5811   */\n      tag_202\n        /* \"#utility.yul\":5803:5810   */\n      dup10\n        /* \"#utility.yul\":5794:5800   */\n      dup3\n        /* \"#utility.yul\":5783:5792   */\n      dup11\n        /* \"#utility.yul\":5779:5801   */\n      add\n        /* \"#utility.yul\":5758:5811   */\n      tag_112\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5748:5811   */\n      swap4\n      pop\n        /* \"#utility.yul\":5703:5821   */\n      pop\n        /* \"#utility.yul\":5888:5891   */\n      0x80\n        /* \"#utility.yul\":5877:5886   */\n      dup8\n        /* \"#utility.yul\":5873:5892   */\n      add\n        /* \"#utility.yul\":5860:5893   */\n      calldataload\n        /* \"#utility.yul\":5920:5938   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5912:5918   */\n      dup2\n        /* \"#utility.yul\":5909:5939   */\n      gt\n        /* \"#utility.yul\":5906:6023   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":5942:6021   */\n      tag_204\n      tag_104\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5906:6023   */\n    tag_203:\n        /* \"#utility.yul\":6055:6119   */\n      tag_205\n        /* \"#utility.yul\":6111:6118   */\n      dup10\n        /* \"#utility.yul\":6102:6108   */\n      dup3\n        /* \"#utility.yul\":6091:6100   */\n      dup11\n        /* \"#utility.yul\":6087:6109   */\n      add\n        /* \"#utility.yul\":6055:6119   */\n      tag_122\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6037:6119   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5831:6129   */\n      pop\n        /* \"#utility.yul\":5027:6136   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":6142:6291   */\n    tag_123:\n        /* \"#utility.yul\":6178:6185   */\n      0x00\n        /* \"#utility.yul\":6218:6284   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6211:6216   */\n      dup3\n        /* \"#utility.yul\":6207:6285   */\n      and\n        /* \"#utility.yul\":6196:6285   */\n      swap1\n      pop\n        /* \"#utility.yul\":6142:6291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6297:6412   */\n    tag_124:\n        /* \"#utility.yul\":6382:6405   */\n      tag_208\n        /* \"#utility.yul\":6399:6404   */\n      dup2\n        /* \"#utility.yul\":6382:6405   */\n      tag_123\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6377:6380   */\n      dup3\n        /* \"#utility.yul\":6370:6406   */\n      mstore\n        /* \"#utility.yul\":6297:6412   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6418:6636   */\n    tag_49:\n        /* \"#utility.yul\":6509:6513   */\n      0x00\n        /* \"#utility.yul\":6547:6549   */\n      0x20\n        /* \"#utility.yul\":6536:6545   */\n      dup3\n        /* \"#utility.yul\":6532:6550   */\n      add\n        /* \"#utility.yul\":6524:6550   */\n      swap1\n      pop\n        /* \"#utility.yul\":6560:6629   */\n      tag_210\n        /* \"#utility.yul\":6626:6627   */\n      0x00\n        /* \"#utility.yul\":6615:6624   */\n      dup4\n        /* \"#utility.yul\":6611:6628   */\n      add\n        /* \"#utility.yul\":6602:6608   */\n      dup5\n        /* \"#utility.yul\":6560:6629   */\n      tag_124\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6418:6636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6642:6810   */\n    tag_125:\n        /* \"#utility.yul\":6725:6736   */\n      0x00\n        /* \"#utility.yul\":6759:6765   */\n      dup3\n        /* \"#utility.yul\":6754:6757   */\n      dup3\n        /* \"#utility.yul\":6747:6766   */\n      mstore\n        /* \"#utility.yul\":6799:6803   */\n      0x20\n        /* \"#utility.yul\":6794:6797   */\n      dup3\n        /* \"#utility.yul\":6790:6804   */\n      add\n        /* \"#utility.yul\":6775:6804   */\n      swap1\n      pop\n        /* \"#utility.yul\":6642:6810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6816:6970   */\n    tag_126:\n        /* \"#utility.yul\":6956:6962   */\n      0x3078303000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6952:6953   */\n      0x00\n        /* \"#utility.yul\":6944:6950   */\n      dup3\n        /* \"#utility.yul\":6940:6954   */\n      add\n        /* \"#utility.yul\":6933:6963   */\n      mstore\n        /* \"#utility.yul\":6816:6970   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6976:7339   */\n    tag_127:\n        /* \"#utility.yul\":7117:7120   */\n      0x00\n        /* \"#utility.yul\":7138:7203   */\n      tag_214\n        /* \"#utility.yul\":7201:7202   */\n      0x04\n        /* \"#utility.yul\":7196:7199   */\n      dup4\n        /* \"#utility.yul\":7138:7203   */\n      tag_125\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":7131:7203   */\n      swap2\n      pop\n        /* \"#utility.yul\":7212:7305   */\n      tag_215\n        /* \"#utility.yul\":7301:7304   */\n      dup3\n        /* \"#utility.yul\":7212:7305   */\n      tag_126\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":7330:7332   */\n      0x20\n        /* \"#utility.yul\":7325:7328   */\n      dup3\n        /* \"#utility.yul\":7321:7333   */\n      add\n        /* \"#utility.yul\":7314:7333   */\n      swap1\n      pop\n        /* \"#utility.yul\":6976:7339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7345:8204   */\n    tag_55:\n        /* \"#utility.yul\":7622:7626   */\n      0x00\n        /* \"#utility.yul\":7660:7663   */\n      0xa0\n        /* \"#utility.yul\":7649:7658   */\n      dup3\n        /* \"#utility.yul\":7645:7664   */\n      add\n        /* \"#utility.yul\":7637:7664   */\n      swap1\n      pop\n        /* \"#utility.yul\":7674:7745   */\n      tag_217\n        /* \"#utility.yul\":7742:7743   */\n      0x00\n        /* \"#utility.yul\":7731:7740   */\n      dup4\n        /* \"#utility.yul\":7727:7744   */\n      add\n        /* \"#utility.yul\":7718:7724   */\n      dup8\n        /* \"#utility.yul\":7674:7745   */\n      tag_113\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7755:7827   */\n      tag_218\n        /* \"#utility.yul\":7823:7825   */\n      0x20\n        /* \"#utility.yul\":7812:7821   */\n      dup4\n        /* \"#utility.yul\":7808:7826   */\n      add\n        /* \"#utility.yul\":7799:7805   */\n      dup7\n        /* \"#utility.yul\":7755:7827   */\n      tag_113\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7837:7909   */\n      tag_219\n        /* \"#utility.yul\":7905:7907   */\n      0x40\n        /* \"#utility.yul\":7894:7903   */\n      dup4\n        /* \"#utility.yul\":7890:7908   */\n      add\n        /* \"#utility.yul\":7881:7887   */\n      dup6\n        /* \"#utility.yul\":7837:7909   */\n      tag_110\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7919:7991   */\n      tag_220\n        /* \"#utility.yul\":7987:7989   */\n      0x60\n        /* \"#utility.yul\":7976:7985   */\n      dup4\n        /* \"#utility.yul\":7972:7990   */\n      add\n        /* \"#utility.yul\":7963:7969   */\n      dup5\n        /* \"#utility.yul\":7919:7991   */\n      tag_110\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8039:8048   */\n      dup2\n        /* \"#utility.yul\":8033:8037   */\n      dup2\n        /* \"#utility.yul\":8029:8049   */\n      sub\n        /* \"#utility.yul\":8023:8026   */\n      0x80\n        /* \"#utility.yul\":8012:8021   */\n      dup4\n        /* \"#utility.yul\":8008:8027   */\n      add\n        /* \"#utility.yul\":8001:8050   */\n      mstore\n        /* \"#utility.yul\":8067:8197   */\n      tag_221\n        /* \"#utility.yul\":8192:8196   */\n      dup2\n        /* \"#utility.yul\":8067:8197   */\n      tag_127\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":8059:8197   */\n      swap1\n      pop\n        /* \"#utility.yul\":7345:8204   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8210:8390   */\n    tag_128:\n        /* \"#utility.yul\":8258:8335   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8255:8256   */\n      0x00\n        /* \"#utility.yul\":8248:8336   */\n      mstore\n        /* \"#utility.yul\":8355:8359   */\n      0x11\n        /* \"#utility.yul\":8352:8353   */\n      0x04\n        /* \"#utility.yul\":8345:8360   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x24\n        /* \"#utility.yul\":8376:8377   */\n      0x00\n        /* \"#utility.yul\":8369:8384   */\n      revert\n        /* \"#utility.yul\":8396:8590   */\n    tag_60:\n        /* \"#utility.yul\":8436:8440   */\n      0x00\n        /* \"#utility.yul\":8456:8476   */\n      tag_224\n        /* \"#utility.yul\":8474:8475   */\n      dup3\n        /* \"#utility.yul\":8456:8476   */\n      tag_109\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8451:8476   */\n      swap2\n      pop\n        /* \"#utility.yul\":8490:8510   */\n      tag_225\n        /* \"#utility.yul\":8508:8509   */\n      dup4\n        /* \"#utility.yul\":8490:8510   */\n      tag_109\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8485:8510   */\n      swap3\n      pop\n        /* \"#utility.yul\":8534:8535   */\n      dup3\n        /* \"#utility.yul\":8531:8532   */\n      dup3\n        /* \"#utility.yul\":8527:8536   */\n      sub\n        /* \"#utility.yul\":8519:8536   */\n      swap1\n      pop\n        /* \"#utility.yul\":8558:8559   */\n      dup2\n        /* \"#utility.yul\":8552:8556   */\n      dup2\n        /* \"#utility.yul\":8549:8560   */\n      gt\n        /* \"#utility.yul\":8546:8583   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":8563:8581   */\n      tag_227\n      tag_128\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":8546:8583   */\n    tag_226:\n        /* \"#utility.yul\":8396:8590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8596:8787   */\n    tag_62:\n        /* \"#utility.yul\":8636:8639   */\n      0x00\n        /* \"#utility.yul\":8655:8675   */\n      tag_229\n        /* \"#utility.yul\":8673:8674   */\n      dup3\n        /* \"#utility.yul\":8655:8675   */\n      tag_109\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":8650:8675   */\n      swap2\n      pop\n        /* \"#utility.yul\":8689:8709   */\n      tag_230\n        /* \"#utility.yul\":8707:8708   */\n      dup4\n        /* \"#utility.yul\":8689:8709   */\n      tag_109\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":8684:8709   */\n      swap3\n      pop\n        /* \"#utility.yul\":8732:8733   */\n      dup3\n        /* \"#utility.yul\":8729:8730   */\n      dup3\n        /* \"#utility.yul\":8725:8734   */\n      add\n        /* \"#utility.yul\":8718:8734   */\n      swap1\n      pop\n        /* \"#utility.yul\":8753:8756   */\n      dup1\n        /* \"#utility.yul\":8750:8751   */\n      dup3\n        /* \"#utility.yul\":8747:8757   */\n      gt\n        /* \"#utility.yul\":8744:8780   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":8760:8778   */\n      tag_232\n      tag_128\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":8744:8780   */\n    tag_231:\n        /* \"#utility.yul\":8596:8787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8793:8962   */\n    tag_129:\n        /* \"#utility.yul\":8877:8888   */\n      0x00\n        /* \"#utility.yul\":8911:8917   */\n      dup3\n        /* \"#utility.yul\":8906:8909   */\n      dup3\n        /* \"#utility.yul\":8899:8918   */\n      mstore\n        /* \"#utility.yul\":8951:8955   */\n      0x20\n        /* \"#utility.yul\":8946:8949   */\n      dup3\n        /* \"#utility.yul\":8942:8956   */\n      add\n        /* \"#utility.yul\":8927:8956   */\n      swap1\n      pop\n        /* \"#utility.yul\":8793:8962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8968:9193   */\n    tag_130:\n        /* \"#utility.yul\":9108:9142   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9104:9105   */\n      0x00\n        /* \"#utility.yul\":9096:9102   */\n      dup3\n        /* \"#utility.yul\":9092:9106   */\n      add\n        /* \"#utility.yul\":9085:9143   */\n      mstore\n        /* \"#utility.yul\":9177:9185   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9172:9174   */\n      0x20\n        /* \"#utility.yul\":9164:9170   */\n      dup3\n        /* \"#utility.yul\":9160:9175   */\n      add\n        /* \"#utility.yul\":9153:9186   */\n      mstore\n        /* \"#utility.yul\":8968:9193   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9199:9565   */\n    tag_131:\n        /* \"#utility.yul\":9341:9344   */\n      0x00\n        /* \"#utility.yul\":9362:9429   */\n      tag_236\n        /* \"#utility.yul\":9426:9428   */\n      0x26\n        /* \"#utility.yul\":9421:9424   */\n      dup4\n        /* \"#utility.yul\":9362:9429   */\n      tag_129\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":9355:9429   */\n      swap2\n      pop\n        /* \"#utility.yul\":9438:9531   */\n      tag_237\n        /* \"#utility.yul\":9527:9530   */\n      dup3\n        /* \"#utility.yul\":9438:9531   */\n      tag_130\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9556:9558   */\n      0x40\n        /* \"#utility.yul\":9551:9554   */\n      dup3\n        /* \"#utility.yul\":9547:9559   */\n      add\n        /* \"#utility.yul\":9540:9559   */\n      swap1\n      pop\n        /* \"#utility.yul\":9199:9565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9571:9990   */\n    tag_86:\n        /* \"#utility.yul\":9737:9741   */\n      0x00\n        /* \"#utility.yul\":9775:9777   */\n      0x20\n        /* \"#utility.yul\":9764:9773   */\n      dup3\n        /* \"#utility.yul\":9760:9778   */\n      add\n        /* \"#utility.yul\":9752:9778   */\n      swap1\n      pop\n        /* \"#utility.yul\":9824:9833   */\n      dup2\n        /* \"#utility.yul\":9818:9822   */\n      dup2\n        /* \"#utility.yul\":9814:9834   */\n      sub\n        /* \"#utility.yul\":9810:9811   */\n      0x00\n        /* \"#utility.yul\":9799:9808   */\n      dup4\n        /* \"#utility.yul\":9795:9812   */\n      add\n        /* \"#utility.yul\":9788:9835   */\n      mstore\n        /* \"#utility.yul\":9852:9983   */\n      tag_239\n        /* \"#utility.yul\":9978:9982   */\n      dup2\n        /* \"#utility.yul\":9852:9983   */\n      tag_131\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9844:9983   */\n      swap1\n      pop\n        /* \"#utility.yul\":9571:9990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9996:10178   */\n    tag_132:\n        /* \"#utility.yul\":10136:10170   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10132:10133   */\n      0x00\n        /* \"#utility.yul\":10124:10130   */\n      dup3\n        /* \"#utility.yul\":10120:10134   */\n      add\n        /* \"#utility.yul\":10113:10171   */\n      mstore\n        /* \"#utility.yul\":9996:10178   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10184:10550   */\n    tag_133:\n        /* \"#utility.yul\":10326:10329   */\n      0x00\n        /* \"#utility.yul\":10347:10414   */\n      tag_242\n        /* \"#utility.yul\":10411:10413   */\n      0x20\n        /* \"#utility.yul\":10406:10409   */\n      dup4\n        /* \"#utility.yul\":10347:10414   */\n      tag_129\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":10340:10414   */\n      swap2\n      pop\n        /* \"#utility.yul\":10423:10516   */\n      tag_243\n        /* \"#utility.yul\":10512:10515   */\n      dup3\n        /* \"#utility.yul\":10423:10516   */\n      tag_132\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":10541:10543   */\n      0x20\n        /* \"#utility.yul\":10536:10539   */\n      dup3\n        /* \"#utility.yul\":10532:10544   */\n      add\n        /* \"#utility.yul\":10525:10544   */\n      swap1\n      pop\n        /* \"#utility.yul\":10184:10550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10556:10975   */\n    tag_99:\n        /* \"#utility.yul\":10722:10726   */\n      0x00\n        /* \"#utility.yul\":10760:10762   */\n      0x20\n        /* \"#utility.yul\":10749:10758   */\n      dup3\n        /* \"#utility.yul\":10745:10763   */\n      add\n        /* \"#utility.yul\":10737:10763   */\n      swap1\n      pop\n        /* \"#utility.yul\":10809:10818   */\n      dup2\n        /* \"#utility.yul\":10803:10807   */\n      dup2\n        /* \"#utility.yul\":10799:10819   */\n      sub\n        /* \"#utility.yul\":10795:10796   */\n      0x00\n        /* \"#utility.yul\":10784:10793   */\n      dup4\n        /* \"#utility.yul\":10780:10797   */\n      add\n        /* \"#utility.yul\":10773:10820   */\n      mstore\n        /* \"#utility.yul\":10837:10968   */\n      tag_245\n        /* \"#utility.yul\":10963:10967   */\n      dup2\n        /* \"#utility.yul\":10837:10968   */\n      tag_133\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":10829:10968   */\n      swap1\n      pop\n        /* \"#utility.yul\":10556:10975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203390d9851a8c83f77cf7ffd41c2a59fc2d254c003d3ad2337d1efa45eba95bc764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_402": {
									"entryPoint": null,
									"id": 402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_321": {
									"entryPoint": 135,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 143,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261008760201b60201c565b61008f60201b60201c565b73d8b934580fce35a11b58c6d73adee468a2833fa8600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610153565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e7d806101626000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637b0472f0116100665780637b0472f0146101355780638da5cb5b14610151578063b8e33fb21461016f578063f23a6e611461018d578063f2fde38b146101bd5761009e565b806316934fc4146100a35780632def6620146100d55780634a7c7e4b146100df578063583d42fd146100fb578063715018a61461012b575b600080fd5b6100bd60048036038101906100b891906108ef565b6101d9565b6040516100cc93929190610935565b60405180910390f35b6100dd610203565b005b6100f960048036038101906100f491906108ef565b610422565b005b610115600480360381019061011091906108ef565b61046e565b604051610122919061096c565b60405180910390f35b610133610486565b005b61014f600480360381019061014a91906109b3565b61049a565b005b6101596105ac565b6040516101669190610a02565b60405180910390f35b6101776105d5565b6040516101849190610a7c565b60405180910390f35b6101a760048036038101906101a29190610afc565b6105fb565b6040516101b49190610bd1565b60405180910390f35b6101d760048036038101906101d291906108ef565b61062a565b005b60036020528060005260406000206000915090508060000154908060010154908060020154905083565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3033600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b81526004016102e89493929190610c49565b600060405180830381600087803b15801561030257600080fd5b505af1158015610316573d6000803e3d6000fd5b50505050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426103689190610cd0565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103b69190610d04565b92505081905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090555050610420336106ad565b565b61042a61073d565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60046020528060005260406000206000915090505481565b61048e61073d565b61049860006107bb565b565b604051806060016040528083815260200182815260200142815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b81526004016105769493929190610c49565b600060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b61063261073d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890610dbb565b60405180910390fd5b6106aa816107bb565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d34f6e72826040518263ffffffff1660e01b81526004016107089190610a02565b600060405180830381600087803b15801561072257600080fd5b505af1158015610736573d6000803e3d6000fd5b5050505050565b61074561087f565b73ffffffffffffffffffffffffffffffffffffffff166107636105ac565b73ffffffffffffffffffffffffffffffffffffffff16146107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b090610e27565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108bc82610891565b9050919050565b6108cc816108b1565b81146108d757600080fd5b50565b6000813590506108e9816108c3565b92915050565b60006020828403121561090557610904610887565b5b6000610913848285016108da565b91505092915050565b6000819050919050565b61092f8161091c565b82525050565b600060608201905061094a6000830186610926565b6109576020830185610926565b6109646040830184610926565b949350505050565b60006020820190506109816000830184610926565b92915050565b6109908161091c565b811461099b57600080fd5b50565b6000813590506109ad81610987565b92915050565b600080604083850312156109ca576109c9610887565b5b60006109d88582860161099e565b92505060206109e98582860161099e565b9150509250929050565b6109fc816108b1565b82525050565b6000602082019050610a1760008301846109f3565b92915050565b6000819050919050565b6000610a42610a3d610a3884610891565b610a1d565b610891565b9050919050565b6000610a5482610a27565b9050919050565b6000610a6682610a49565b9050919050565b610a7681610a5b565b82525050565b6000602082019050610a916000830184610a6d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610abc57610abb610a97565b5b8235905067ffffffffffffffff811115610ad957610ad8610a9c565b5b602083019150836001820283011115610af557610af4610aa1565b5b9250929050565b60008060008060008060a08789031215610b1957610b18610887565b5b6000610b2789828a016108da565b9650506020610b3889828a016108da565b9550506040610b4989828a0161099e565b9450506060610b5a89828a0161099e565b935050608087013567ffffffffffffffff811115610b7b57610b7a61088c565b5b610b8789828a01610aa6565b92509250509295509295509295565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610bcb81610b96565b82525050565b6000602082019050610be66000830184610bc2565b92915050565b600082825260208201905092915050565b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b6000610c33600483610bec565b9150610c3e82610bfd565b602082019050919050565b600060a082019050610c5e60008301876109f3565b610c6b60208301866109f3565b610c786040830185610926565b610c856060830184610926565b8181036080830152610c9681610c26565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cdb8261091c565b9150610ce68361091c565b9250828203905081811115610cfe57610cfd610ca1565b5b92915050565b6000610d0f8261091c565b9150610d1a8361091c565b9250828201905080821115610d3257610d31610ca1565b5b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610da5602683610d38565b9150610db082610d49565b604082019050919050565b60006020820190508181036000830152610dd481610d98565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e11602083610d38565b9150610e1c82610ddb565b602082019050919050565b60006020820190508181036000830152610e4081610e04565b905091905056fea26469706673582212203390d9851a8c83f77cf7ffd41c2a59fc2d254c003d3ad2337d1efa45eba95bc764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x8F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xD8B934580FCE35A11B58C6D73ADEE468A2833FA8 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x153 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE7D DUP1 PUSH2 0x162 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0472F0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BD JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x4A7C7E4B EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH2 0x203 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x486 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x368 SWAP2 SWAP1 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0x420 CALLER PUSH2 0x6AD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x42A PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x48E PUSH2 0x73D JUMP JUMPDEST PUSH2 0x498 PUSH1 0x0 PUSH2 0x7BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x632 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AA DUP2 PUSH2 0x7BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD34F6E72 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x736 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x745 PUSH2 0x87F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x763 PUSH2 0x5AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BC DUP3 PUSH2 0x891 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CC DUP2 PUSH2 0x8B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E9 DUP2 PUSH2 0x8C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x905 JUMPI PUSH2 0x904 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x913 DUP5 DUP3 DUP6 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x92F DUP2 PUSH2 0x91C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x94A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x957 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x964 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x926 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x981 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x990 DUP2 PUSH2 0x91C JUMP JUMPDEST DUP2 EQ PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0x987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9E9 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FC DUP2 PUSH2 0x8B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA17 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA42 PUSH2 0xA3D PUSH2 0xA38 DUP5 PUSH2 0x891 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA54 DUP3 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA66 DUP3 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA76 DUP2 PUSH2 0xA5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0xA97 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xAF5 JUMPI PUSH2 0xAF4 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xB19 JUMPI PUSH2 0xB18 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB27 DUP10 DUP3 DUP11 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xB38 DUP10 DUP3 DUP11 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xB49 DUP10 DUP3 DUP11 ADD PUSH2 0x99E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xB5A DUP10 DUP3 DUP11 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0x88C JUMP JUMPDEST JUMPDEST PUSH2 0xB87 DUP10 DUP3 DUP11 ADD PUSH2 0xAA6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBCB DUP2 PUSH2 0xB96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC33 PUSH1 0x4 DUP4 PUSH2 0xBEC JUMP JUMPDEST SWAP2 POP PUSH2 0xC3E DUP3 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0xC6B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0xC78 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x926 JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x926 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xC96 DUP2 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCDB DUP3 PUSH2 0x91C JUMP JUMPDEST SWAP2 POP PUSH2 0xCE6 DUP4 PUSH2 0x91C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCFE JUMPI PUSH2 0xCFD PUSH2 0xCA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0F DUP3 PUSH2 0x91C JUMP JUMPDEST SWAP2 POP PUSH2 0xD1A DUP4 PUSH2 0x91C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xD31 PUSH2 0xCA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA5 PUSH1 0x26 DUP4 PUSH2 0xD38 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB0 DUP3 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD4 DUP2 PUSH2 0xD98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE11 PUSH1 0x20 DUP4 PUSH2 0xD38 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1C DUP3 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE40 DUP2 PUSH2 0xE04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP1 0xD9 DUP6 BYTE DUP13 DUP4 0xF7 PUSH29 0xF7FFD41C2A59FC2D254C003D3AD2337D1EFA45EBA95BC764736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "344:1607:7:-:0;;;553:96;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;598:42:7;577:9;;:64;;;;;;;;;;;;;;;;;;344:1607;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;344:1607:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1853,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_321": {
									"entryPoint": 2175,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1979,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getLuckyReward_427": {
									"entryPoint": 1709,
									"id": 427,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC1155Received_545": {
									"entryPoint": 1531,
									"id": 545,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1452,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@parentNFT_383": {
									"entryPoint": 1493,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1158,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setGenerator_414": {
									"entryPoint": 1058,
									"id": 414,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_470": {
									"entryPoint": 1178,
									"id": 470,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakes_432": {
									"entryPoint": 473,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTime_436": {
									"entryPoint": 1134,
									"id": 436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1578,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_522": {
									"entryPoint": 515,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC1155_$234_to_t_address_fromStack": {
									"entryPoint": 2669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3145,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC1155_$234__to_t_address__fromStack_reversed": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC1155_$234_to_t_address": {
									"entryPoint": 2651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3233,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10978:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:8",
														"type": ""
													}
												],
												"src": "696:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:8"
															},
															"nodeType": "YulIf",
															"src": "917:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:8",
														"type": ""
													}
												],
												"src": "841:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:8",
														"type": ""
													}
												],
												"src": "1176:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:8",
														"type": ""
													}
												],
												"src": "1259:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1537:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1547:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1721:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1732:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1717:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1717:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1664:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1664:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1803:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1814:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1746:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1746:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1493:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1505:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1513:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1521:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1532:4:8",
														"type": ""
													}
												],
												"src": "1383:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1939:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1951:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1962:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1939:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2032:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2043:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1975:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1975:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1901:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1913:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1924:4:8",
														"type": ""
													}
												],
												"src": "1831:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2102:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2159:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2171:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2161:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2161:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2161:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2125:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2150:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2132:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2132:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2122:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:43:8"
															},
															"nodeType": "YulIf",
															"src": "2112:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2095:5:8",
														"type": ""
													}
												],
												"src": "2059:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2239:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2249:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2271:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2258:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2249:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2314:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2287:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2217:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2225:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2233:5:8",
														"type": ""
													}
												],
												"src": "2187:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2415:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2461:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2463:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2463:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2463:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2436:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2445:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2432:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2432:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2457:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:32:8"
															},
															"nodeType": "YulIf",
															"src": "2425:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2554:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2569:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2583:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2573:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2598:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2633:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2644:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2629:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2629:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2653:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2608:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2608:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2598:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2681:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2696:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2700:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2726:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2761:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2772:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2757:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2757:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2781:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2736:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2736:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2726:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2377:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2388:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2400:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2408:6:8",
														"type": ""
													}
												],
												"src": "2332:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2877:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2894:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2917:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2899:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2899:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2887:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2887:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2865:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2872:3:8",
														"type": ""
													}
												],
												"src": "2812:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3044:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3056:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3067:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3052:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3052:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3044:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3124:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3137:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3148:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3133:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3133:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3080:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3080:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3006:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3018:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3029:4:8",
														"type": ""
													}
												],
												"src": "2936:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3196:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3206:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3213:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3206:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3182:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3192:3:8",
														"type": ""
													}
												],
												"src": "3164:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3290:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3300:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3358:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3340:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3340:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3331:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3331:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3313:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3300:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3270:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3280:9:8",
														"type": ""
													}
												],
												"src": "3230:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3438:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3448:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3492:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3461:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3461:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3448:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3418:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3428:9:8",
														"type": ""
													}
												],
												"src": "3378:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3586:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3596:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3640:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3609:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3596:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC1155_$234_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3566:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3576:9:8",
														"type": ""
													}
												],
												"src": "3510:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3739:82:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3808:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC1155_$234_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3761:46:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:53:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:66:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3749:66:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC1155_$234_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3727:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3734:3:8",
														"type": ""
													}
												],
												"src": "3658:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3941:140:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3951:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3963:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3951:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4047:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4060:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4056:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC1155_$234_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3987:59:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:87:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:87:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC1155_$234__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3913:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3925:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3936:4:8",
														"type": ""
													}
												],
												"src": "3827:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4176:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4196:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4186:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4186:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4087:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4299:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4316:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4319:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4309:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4309:12:8"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "4210:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4422:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4439:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4442:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4432:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4432:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4432:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "4333:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4543:478:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4592:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4594:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4594:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4594:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4571:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4579:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4567:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4567:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4586:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4563:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4563:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4556:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4556:35:8"
															},
															"nodeType": "YulIf",
															"src": "4553:122:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4684:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4707:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4694:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4684:6:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4757:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "4759:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4759:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4759:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4729:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4737:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4726:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4726:30:8"
															},
															"nodeType": "YulIf",
															"src": "4723:117:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4849:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4865:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4873:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4861:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4849:8:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4932:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4934:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4934:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4934:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "4897:8:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4911:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4919:4:8",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4907:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4907:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4893:32:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4927:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4890:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:41:8"
															},
															"nodeType": "YulIf",
															"src": "4887:128:8"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4510:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4518:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "4526:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4536:6:8",
														"type": ""
													}
												],
												"src": "4469:552:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5180:956:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5227:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5229:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5229:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5229:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5201:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5197:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5197:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5222:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5193:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:33:8"
															},
															"nodeType": "YulIf",
															"src": "5190:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "5320:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5335:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5349:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5339:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5364:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5399:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5410:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5395:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5395:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5419:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5374:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5374:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5364:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5447:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5462:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5476:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5466:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5492:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5527:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5538:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5523:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5523:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5547:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5502:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5502:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5492:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5575:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5590:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5594:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5620:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5655:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5666:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5651:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5651:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5675:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5630:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5630:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5620:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5703:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5718:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5732:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5722:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5748:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5783:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5794:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5779:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5779:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5803:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5758:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5758:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5748:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5831:298:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5846:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5877:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5888:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5873:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5873:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5860:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5860:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5850:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5940:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5942:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5942:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5942:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5912:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5920:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5909:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5909:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "5906:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6037:82:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6091:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6102:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6087:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6087:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6111:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6055:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6055:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6037:6:8"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "6045:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5110:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5121:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5141:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5149:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5157:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5165:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5173:6:8",
														"type": ""
													}
												],
												"src": "5027:1109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6186:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6196:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6211:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6218:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6207:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6196:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6168:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6178:7:8",
														"type": ""
													}
												],
												"src": "6142:149:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6360:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6377:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6399:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "6382:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6382:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6370:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6370:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6370:36:8"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6348:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6355:3:8",
														"type": ""
													}
												],
												"src": "6297:115:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6514:122:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6524:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6536:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6547:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6524:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6602:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6615:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6626:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6611:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6560:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6560:69:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6560:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6486:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6498:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6509:4:8",
														"type": ""
													}
												],
												"src": "6418:218:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6737:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6754:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6759:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6747:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6747:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6775:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6794:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6799:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6790:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6775:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6709:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6714:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6725:11:8",
														"type": ""
													}
												],
												"src": "6642:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6922:48:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6944:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6952:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6940:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6940:14:8"
																	},
																	{
																		"hexValue": "30783030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6956:6:8",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6933:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6933:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6933:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6914:6:8",
														"type": ""
													}
												],
												"src": "6816:154:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7121:218:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7131:72:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7196:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7201:1:8",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7138:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7138:65:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7131:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7301:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"nodeType": "YulIdentifier",
																	"src": "7212:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7212:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7212:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7314:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7325:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7321:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7314:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7109:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7117:3:8",
														"type": ""
													}
												],
												"src": "6976:363:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7627:577:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7637:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7649:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7660:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7645:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7645:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7637:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7718:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7731:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7742:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7727:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7727:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7674:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7674:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7799:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7812:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7823:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7808:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7755:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7755:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7755:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7881:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7894:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7905:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7890:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7890:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7837:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7837:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7837:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7963:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7976:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7987:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7972:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7972:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7919:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7919:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7919:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8012:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8023:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8008:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8008:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8033:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8039:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8029:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8029:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8001:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8001:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8001:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8059:138:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8192:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8067:123:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8067:130:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8059:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7575:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7587:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7595:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7603:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7611:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7622:4:8",
														"type": ""
													}
												],
												"src": "7345:859:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8238:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8255:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8248:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8248:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8248:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8352:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8355:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8345:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8376:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8369:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8369:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8369:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8210:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8441:149:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8451:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8474:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8456:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8456:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8451:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8485:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8508:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8490:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8490:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8485:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8519:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8531:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8534:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8527:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8527:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8519:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8561:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8563:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8563:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8563:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8552:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8558:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8549:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8549:11:8"
															},
															"nodeType": "YulIf",
															"src": "8546:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8427:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8430:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8436:4:8",
														"type": ""
													}
												],
												"src": "8396:194:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8640:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8650:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8673:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8655:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8655:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8650:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8684:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8707:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8689:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8689:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8684:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8718:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8729:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8732:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8725:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8725:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8718:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8758:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8760:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8760:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8760:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8750:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8753:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8747:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8747:10:8"
															},
															"nodeType": "YulIf",
															"src": "8744:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8627:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8630:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8636:3:8",
														"type": ""
													}
												],
												"src": "8596:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8889:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8906:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8911:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8899:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8899:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8899:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8927:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8946:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8951:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8942:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8942:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8927:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8861:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8866:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8877:11:8",
														"type": ""
													}
												],
												"src": "8793:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9074:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9096:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9104:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9092:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9092:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9108:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9085:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9085:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9085:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9164:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9172:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9160:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9177:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9153:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9066:6:8",
														"type": ""
													}
												],
												"src": "8968:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9345:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9355:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9421:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9426:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9362:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9362:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9355:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9527:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "9438:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9438:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9438:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9540:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9551:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9556:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9547:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9547:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9540:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9333:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9341:3:8",
														"type": ""
													}
												],
												"src": "9199:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9742:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9752:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9764:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9775:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9760:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9760:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9752:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9799:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9810:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9795:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9795:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9818:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9824:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9814:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9814:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9844:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9978:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9852:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9844:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9722:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9737:4:8",
														"type": ""
													}
												],
												"src": "9571:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10102:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10124:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10132:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10120:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10120:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10136:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10113:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10113:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10113:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10094:6:8",
														"type": ""
													}
												],
												"src": "9996:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10330:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10340:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10406:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10411:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10347:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10347:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10340:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10512:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10423:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10423:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10423:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10525:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10536:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10541:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10532:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10532:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10525:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10318:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10326:3:8",
														"type": ""
													}
												],
												"src": "10184:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10727:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10737:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10749:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10760:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10745:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10745:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10737:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10784:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10795:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10780:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10780:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10803:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10809:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10799:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10799:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10773:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10773:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10773:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10829:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10963:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10837:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10837:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10829:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10707:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10722:4:8",
														"type": ""
													}
												],
												"src": "10556:419:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC1155_$234_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC1155_$234_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC1155_$234_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC1155_$234__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC1155_$234_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"0x00\")\n\n    }\n\n    function abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80637b0472f0116100665780637b0472f0146101355780638da5cb5b14610151578063b8e33fb21461016f578063f23a6e611461018d578063f2fde38b146101bd5761009e565b806316934fc4146100a35780632def6620146100d55780634a7c7e4b146100df578063583d42fd146100fb578063715018a61461012b575b600080fd5b6100bd60048036038101906100b891906108ef565b6101d9565b6040516100cc93929190610935565b60405180910390f35b6100dd610203565b005b6100f960048036038101906100f491906108ef565b610422565b005b610115600480360381019061011091906108ef565b61046e565b604051610122919061096c565b60405180910390f35b610133610486565b005b61014f600480360381019061014a91906109b3565b61049a565b005b6101596105ac565b6040516101669190610a02565b60405180910390f35b6101776105d5565b6040516101849190610a7c565b60405180910390f35b6101a760048036038101906101a29190610afc565b6105fb565b6040516101b49190610bd1565b60405180910390f35b6101d760048036038101906101d291906108ef565b61062a565b005b60036020528060005260406000206000915090508060000154908060010154908060020154905083565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3033600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b81526004016102e89493929190610c49565b600060405180830381600087803b15801561030257600080fd5b505af1158015610316573d6000803e3d6000fd5b50505050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426103689190610cd0565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103b69190610d04565b92505081905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090555050610420336106ad565b565b61042a61073d565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60046020528060005260406000206000915090505481565b61048e61073d565b61049860006107bb565b565b604051806060016040528083815260200182815260200142815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b81526004016105769493929190610c49565b600060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b61063261073d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890610dbb565b60405180910390fd5b6106aa816107bb565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d34f6e72826040518263ffffffff1660e01b81526004016107089190610a02565b600060405180830381600087803b15801561072257600080fd5b505af1158015610736573d6000803e3d6000fd5b5050505050565b61074561087f565b73ffffffffffffffffffffffffffffffffffffffff166107636105ac565b73ffffffffffffffffffffffffffffffffffffffff16146107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b090610e27565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108bc82610891565b9050919050565b6108cc816108b1565b81146108d757600080fd5b50565b6000813590506108e9816108c3565b92915050565b60006020828403121561090557610904610887565b5b6000610913848285016108da565b91505092915050565b6000819050919050565b61092f8161091c565b82525050565b600060608201905061094a6000830186610926565b6109576020830185610926565b6109646040830184610926565b949350505050565b60006020820190506109816000830184610926565b92915050565b6109908161091c565b811461099b57600080fd5b50565b6000813590506109ad81610987565b92915050565b600080604083850312156109ca576109c9610887565b5b60006109d88582860161099e565b92505060206109e98582860161099e565b9150509250929050565b6109fc816108b1565b82525050565b6000602082019050610a1760008301846109f3565b92915050565b6000819050919050565b6000610a42610a3d610a3884610891565b610a1d565b610891565b9050919050565b6000610a5482610a27565b9050919050565b6000610a6682610a49565b9050919050565b610a7681610a5b565b82525050565b6000602082019050610a916000830184610a6d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610abc57610abb610a97565b5b8235905067ffffffffffffffff811115610ad957610ad8610a9c565b5b602083019150836001820283011115610af557610af4610aa1565b5b9250929050565b60008060008060008060a08789031215610b1957610b18610887565b5b6000610b2789828a016108da565b9650506020610b3889828a016108da565b9550506040610b4989828a0161099e565b9450506060610b5a89828a0161099e565b935050608087013567ffffffffffffffff811115610b7b57610b7a61088c565b5b610b8789828a01610aa6565b92509250509295509295509295565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610bcb81610b96565b82525050565b6000602082019050610be66000830184610bc2565b92915050565b600082825260208201905092915050565b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b6000610c33600483610bec565b9150610c3e82610bfd565b602082019050919050565b600060a082019050610c5e60008301876109f3565b610c6b60208301866109f3565b610c786040830185610926565b610c856060830184610926565b8181036080830152610c9681610c26565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cdb8261091c565b9150610ce68361091c565b9250828203905081811115610cfe57610cfd610ca1565b5b92915050565b6000610d0f8261091c565b9150610d1a8361091c565b9250828201905080821115610d3257610d31610ca1565b5b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610da5602683610d38565b9150610db082610d49565b604082019050919050565b60006020820190508181036000830152610dd481610d98565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e11602083610d38565b9150610e1c82610ddb565b602082019050919050565b60006020820190508181036000830152610e4081610e04565b905091905056fea26469706673582212203390d9851a8c83f77cf7ffd41c2a59fc2d254c003d3ad2337d1efa45eba95bc764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0472F0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BD JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x4A7C7E4B EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH2 0x203 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x486 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x368 SWAP2 SWAP1 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0x420 CALLER PUSH2 0x6AD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x42A PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x48E PUSH2 0x73D JUMP JUMPDEST PUSH2 0x498 PUSH1 0x0 PUSH2 0x7BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x632 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AA DUP2 PUSH2 0x7BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD34F6E72 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x736 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x745 PUSH2 0x87F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x763 PUSH2 0x5AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BC DUP3 PUSH2 0x891 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CC DUP2 PUSH2 0x8B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E9 DUP2 PUSH2 0x8C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x905 JUMPI PUSH2 0x904 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x913 DUP5 DUP3 DUP6 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x92F DUP2 PUSH2 0x91C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x94A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x957 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x964 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x926 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x981 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x990 DUP2 PUSH2 0x91C JUMP JUMPDEST DUP2 EQ PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0x987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9E9 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FC DUP2 PUSH2 0x8B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA17 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA42 PUSH2 0xA3D PUSH2 0xA38 DUP5 PUSH2 0x891 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA54 DUP3 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA66 DUP3 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA76 DUP2 PUSH2 0xA5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0xA97 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xAF5 JUMPI PUSH2 0xAF4 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xB19 JUMPI PUSH2 0xB18 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB27 DUP10 DUP3 DUP11 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xB38 DUP10 DUP3 DUP11 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xB49 DUP10 DUP3 DUP11 ADD PUSH2 0x99E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xB5A DUP10 DUP3 DUP11 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0x88C JUMP JUMPDEST JUMPDEST PUSH2 0xB87 DUP10 DUP3 DUP11 ADD PUSH2 0xAA6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBCB DUP2 PUSH2 0xB96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC33 PUSH1 0x4 DUP4 PUSH2 0xBEC JUMP JUMPDEST SWAP2 POP PUSH2 0xC3E DUP3 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0xC6B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0xC78 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x926 JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x926 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xC96 DUP2 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCDB DUP3 PUSH2 0x91C JUMP JUMPDEST SWAP2 POP PUSH2 0xCE6 DUP4 PUSH2 0x91C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCFE JUMPI PUSH2 0xCFD PUSH2 0xCA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0F DUP3 PUSH2 0x91C JUMP JUMPDEST SWAP2 POP PUSH2 0xD1A DUP4 PUSH2 0x91C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xD31 PUSH2 0xCA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA5 PUSH1 0x26 DUP4 PUSH2 0xD38 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB0 DUP3 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD4 DUP2 PUSH2 0xD98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE11 PUSH1 0x20 DUP4 PUSH2 0xD38 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1C DUP3 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE40 DUP2 PUSH2 0xE04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP1 0xD9 DUP6 BYTE DUP13 DUP4 0xF7 PUSH29 0xF7FFD41C2A59FC2D254C003D3AD2337D1EFA45EBA95BC764736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "344:1607:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1323:320;;;:::i;:::-;;657:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1023:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1084:230:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;381:25:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1658:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;933:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1323:320::-;1360:9;;;;;;;;;;;:26;;;1395:4;1402:10;1414:6;:18;1421:10;1414:18;;;;;;;;;;;;;;;:26;;;1442:6;:18;1449:10;1442:18;;;;;;;;;;;;;;;:25;;;1360:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:6;:18;1540:10;1533:18;;;;;;;;;;;;;;;:28;;;1515:15;:46;;;;:::i;:::-;1487:11;:23;1499:10;1487:23;;;;;;;;;;;;;;;;:75;;;;;;;:::i;:::-;;;;;;;;1580:6;:18;1587:10;1580:18;;;;;;;;;;;;;;;;1573:25;;;;;;;;;;;;;;;;;;;;1609:26;1624:10;1609:14;:26::i;:::-;1323:320::o;657:103::-;1094:13:0;:11;:13::i;:::-;742:10:7::1;726:13;;:26;;;;;;;;;;;;;;;;;;657:103:::0;:::o;1023:46::-;;;;;;;;;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1084:230:7:-;1173:41;;;;;;;;1179:8;1173:41;;;;1189:7;1173:41;;;;1198:15;1173:41;;;1152:6;:18;1159:10;1152:18;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;1226:9;;;;;;;;;;;:26;;;1253:10;1273:4;1280:8;1290:7;1226:80;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1084:230;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;381:25:7:-;;;;;;;;;;;;;:::o;1658:288::-;1835:6;1868:69;1854:84;;1658:288;;;;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;768:113:7:-;837:13;;;;;;;;;;;826:40;;;867:5;826:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:113;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;88:117:8:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:442::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1664:72;1732:2;1721:9;1717:18;1708:6;1664:72;:::i;:::-;1746;1814:2;1803:9;1799:18;1790:6;1746:72;:::i;:::-;1383:442;;;;;;:::o;1831:222::-;1924:4;1962:2;1951:9;1947:18;1939:26;;1975:71;2043:1;2032:9;2028:17;2019:6;1975:71;:::i;:::-;1831:222;;;;:::o;2059:122::-;2132:24;2150:5;2132:24;:::i;:::-;2125:5;2122:35;2112:63;;2171:1;2168;2161:12;2112:63;2059:122;:::o;2187:139::-;2233:5;2271:6;2258:20;2249:29;;2287:33;2314:5;2287:33;:::i;:::-;2187:139;;;;:::o;2332:474::-;2400:6;2408;2457:2;2445:9;2436:7;2432:23;2428:32;2425:119;;;2463:79;;:::i;:::-;2425:119;2583:1;2608:53;2653:7;2644:6;2633:9;2629:22;2608:53;:::i;:::-;2598:63;;2554:117;2710:2;2736:53;2781:7;2772:6;2761:9;2757:22;2736:53;:::i;:::-;2726:63;;2681:118;2332:474;;;;;:::o;2812:118::-;2899:24;2917:5;2899:24;:::i;:::-;2894:3;2887:37;2812:118;;:::o;2936:222::-;3029:4;3067:2;3056:9;3052:18;3044:26;;3080:71;3148:1;3137:9;3133:17;3124:6;3080:71;:::i;:::-;2936:222;;;;:::o;3164:60::-;3192:3;3213:5;3206:12;;3164:60;;;:::o;3230:142::-;3280:9;3313:53;3331:34;3340:24;3358:5;3340:24;:::i;:::-;3331:34;:::i;:::-;3313:53;:::i;:::-;3300:66;;3230:142;;;:::o;3378:126::-;3428:9;3461:37;3492:5;3461:37;:::i;:::-;3448:50;;3378:126;;;:::o;3510:142::-;3576:9;3609:37;3640:5;3609:37;:::i;:::-;3596:50;;3510:142;;;:::o;3658:163::-;3761:53;3808:5;3761:53;:::i;:::-;3756:3;3749:66;3658:163;;:::o;3827:254::-;3936:4;3974:2;3963:9;3959:18;3951:26;;3987:87;4071:1;4060:9;4056:17;4047:6;3987:87;:::i;:::-;3827:254;;;;:::o;4087:117::-;4196:1;4193;4186:12;4210:117;4319:1;4316;4309:12;4333:117;4442:1;4439;4432:12;4469:552;4526:8;4536:6;4586:3;4579:4;4571:6;4567:17;4563:27;4553:122;;4594:79;;:::i;:::-;4553:122;4707:6;4694:20;4684:30;;4737:18;4729:6;4726:30;4723:117;;;4759:79;;:::i;:::-;4723:117;4873:4;4865:6;4861:17;4849:29;;4927:3;4919:4;4911:6;4907:17;4897:8;4893:32;4890:41;4887:128;;;4934:79;;:::i;:::-;4887:128;4469:552;;;;;:::o;5027:1109::-;5133:6;5141;5149;5157;5165;5173;5222:3;5210:9;5201:7;5197:23;5193:33;5190:120;;;5229:79;;:::i;:::-;5190:120;5349:1;5374:53;5419:7;5410:6;5399:9;5395:22;5374:53;:::i;:::-;5364:63;;5320:117;5476:2;5502:53;5547:7;5538:6;5527:9;5523:22;5502:53;:::i;:::-;5492:63;;5447:118;5604:2;5630:53;5675:7;5666:6;5655:9;5651:22;5630:53;:::i;:::-;5620:63;;5575:118;5732:2;5758:53;5803:7;5794:6;5783:9;5779:22;5758:53;:::i;:::-;5748:63;;5703:118;5888:3;5877:9;5873:19;5860:33;5920:18;5912:6;5909:30;5906:117;;;5942:79;;:::i;:::-;5906:117;6055:64;6111:7;6102:6;6091:9;6087:22;6055:64;:::i;:::-;6037:82;;;;5831:298;5027:1109;;;;;;;;:::o;6142:149::-;6178:7;6218:66;6211:5;6207:78;6196:89;;6142:149;;;:::o;6297:115::-;6382:23;6399:5;6382:23;:::i;:::-;6377:3;6370:36;6297:115;;:::o;6418:218::-;6509:4;6547:2;6536:9;6532:18;6524:26;;6560:69;6626:1;6615:9;6611:17;6602:6;6560:69;:::i;:::-;6418:218;;;;:::o;6642:168::-;6725:11;6759:6;6754:3;6747:19;6799:4;6794:3;6790:14;6775:29;;6642:168;;;;:::o;6816:154::-;6956:6;6952:1;6944:6;6940:14;6933:30;6816:154;:::o;6976:363::-;7117:3;7138:65;7201:1;7196:3;7138:65;:::i;:::-;7131:72;;7212:93;7301:3;7212:93;:::i;:::-;7330:2;7325:3;7321:12;7314:19;;6976:363;;;:::o;7345:859::-;7622:4;7660:3;7649:9;7645:19;7637:27;;7674:71;7742:1;7731:9;7727:17;7718:6;7674:71;:::i;:::-;7755:72;7823:2;7812:9;7808:18;7799:6;7755:72;:::i;:::-;7837;7905:2;7894:9;7890:18;7881:6;7837:72;:::i;:::-;7919;7987:2;7976:9;7972:18;7963:6;7919:72;:::i;:::-;8039:9;8033:4;8029:20;8023:3;8012:9;8008:19;8001:49;8067:130;8192:4;8067:130;:::i;:::-;8059:138;;7345:859;;;;;;;:::o;8210:180::-;8258:77;8255:1;8248:88;8355:4;8352:1;8345:15;8379:4;8376:1;8369:15;8396:194;8436:4;8456:20;8474:1;8456:20;:::i;:::-;8451:25;;8490:20;8508:1;8490:20;:::i;:::-;8485:25;;8534:1;8531;8527:9;8519:17;;8558:1;8552:4;8549:11;8546:37;;;8563:18;;:::i;:::-;8546:37;8396:194;;;;:::o;8596:191::-;8636:3;8655:20;8673:1;8655:20;:::i;:::-;8650:25;;8689:20;8707:1;8689:20;:::i;:::-;8684:25;;8732:1;8729;8725:9;8718:16;;8753:3;8750:1;8747:10;8744:36;;;8760:18;;:::i;:::-;8744:36;8596:191;;;;:::o;8793:169::-;8877:11;8911:6;8906:3;8899:19;8951:4;8946:3;8942:14;8927:29;;8793:169;;;;:::o;8968:225::-;9108:34;9104:1;9096:6;9092:14;9085:58;9177:8;9172:2;9164:6;9160:15;9153:33;8968:225;:::o;9199:366::-;9341:3;9362:67;9426:2;9421:3;9362:67;:::i;:::-;9355:74;;9438:93;9527:3;9438:93;:::i;:::-;9556:2;9551:3;9547:12;9540:19;;9199:366;;;:::o;9571:419::-;9737:4;9775:2;9764:9;9760:18;9752:26;;9824:9;9818:4;9814:20;9810:1;9799:9;9795:17;9788:47;9852:131;9978:4;9852:131;:::i;:::-;9844:139;;9571:419;;;:::o;9996:182::-;10136:34;10132:1;10124:6;10120:14;10113:58;9996:182;:::o;10184:366::-;10326:3;10347:67;10411:2;10406:3;10347:67;:::i;:::-;10340:74;;10423:93;10512:3;10423:93;:::i;:::-;10541:2;10536:3;10532:12;10525:19;;10184:366;;;:::o;10556:419::-;10722:4;10760:2;10749:9;10745:18;10737:26;;10809:9;10803:4;10799:20;10795:1;10784:9;10780:17;10773:47;10837:131;10963:4;10837:131;:::i;:::-;10829:139;;10556:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "741800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"owner()": "2544",
								"parentNFT()": "infinite",
								"renounceOwnership()": "30487",
								"setGenerator(address)": "27031",
								"stake(uint256,uint256)": "infinite",
								"stakes(address)": "infinite",
								"stakingTime(address)": "2881",
								"transferOwnership(address)": "30832",
								"unstake()": "infinite"
							},
							"internal": {
								"getLuckyReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 1951,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 553,
									"end": 649,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 553,
									"end": 649,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 553,
									"end": 649,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 553,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 649,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 553,
									"end": 649,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 553,
									"end": 649,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 553,
									"end": 649,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 553,
									"end": 649,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 649,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 553,
									"end": 649,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 598,
									"end": 640,
									"name": "PUSH",
									"source": 7,
									"value": "D8B934580FCE35A11B58C6D73ADEE468A2833FA8"
								},
								{
									"begin": 577,
									"end": 586,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 577,
									"end": 586,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 577,
									"end": 641,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 1951,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203390d9851a8c83f77cf7ffd41c2a59fc2d254c003d3ad2337d1efa45eba95bc764736f6c63430008110033",
									".code": [
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "7B0472F0"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "7B0472F0"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "B8E33FB2"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "F23A6E61"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "16934FC4"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "2DEF6620"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "4A7C7E4B"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "583D42FD"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 1951,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 933,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 933,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 933,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1323,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1323,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1643,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 657,
											"end": 760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 657,
											"end": 760,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 657,
											"end": 760,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 657,
											"end": 760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 657,
											"end": 760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 657,
											"end": 760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 657,
											"end": 760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 657,
											"end": 760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1023,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1023,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1023,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1084,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1084,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 381,
											"end": 406,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 381,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 381,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1658,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1658,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1658,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 933,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 933,
											"end": 972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 933,
											"end": 972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1323,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "F242432A"
										},
										{
											"begin": 1395,
											"end": 1399,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1420,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1440,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1459,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1360,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1539,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1550,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1561,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1533,
											"end": 1561,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1561,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1530,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1515,
											"end": 1561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1515,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1561,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1515,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1498,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1509,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1487,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1597,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1609,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1624,
											"end": 1634,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1609,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1609,
											"end": 1635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1609,
											"end": 1635,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1609,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 657,
											"end": 760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 726,
											"end": 739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 726,
											"end": 739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 726,
											"end": 752,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1198,
											"end": 1213,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1169,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1252,
											"name": "PUSH",
											"source": 7,
											"value": "F242432A"
										},
										{
											"begin": 1253,
											"end": 1263,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1277,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1280,
											"end": 1288,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1226,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 406,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 406,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 381,
											"end": 406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1937,
											"name": "PUSH",
											"source": 7,
											"value": "F23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97"
										},
										{
											"begin": 1854,
											"end": 1938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 881,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 768,
											"end": 881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 837,
											"end": 850,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 837,
											"end": 850,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 837,
											"end": 850,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 837,
											"end": 850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 837,
											"end": 850,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 837,
											"end": 850,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 837,
											"end": 850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 837,
											"end": 850,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 837,
											"end": 850,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 837,
											"end": 850,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 826,
											"end": 866,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 866,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 826,
											"end": 866,
											"name": "PUSH",
											"source": 7,
											"value": "D34F6E72"
										},
										{
											"begin": 867,
											"end": 872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 826,
											"end": 873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 826,
											"end": 873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 768,
											"end": 881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 768,
											"end": 881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1664,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1812,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1746,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2043,
											"end": 2044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2028,
											"end": 2045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2025,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1975,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2132,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2125,
											"end": 2130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2157,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2258,
											"end": 2278,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2287,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2454,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2443,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2455,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2460,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2463,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2463,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2463,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2463,
											"end": 2542,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2463,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2653,
											"end": 2660,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 2642,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2651,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2608,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2661,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2608,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2661,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2778,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2736,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2789,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2736,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2726,
											"end": 2789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2726,
											"end": 2789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2930,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2812,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2917,
											"end": 2922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2899,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2924,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 3158,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2936,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3069,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3080,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 3148,
											"end": 3149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3146,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3080,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3080,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3080,
											"end": 3151,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 3080,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 3158,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 3158,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 3158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 3158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 3158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3164,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3224,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3372,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3230,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3331,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3358,
											"end": 3363,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3340,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3331,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3365,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3331,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3313,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3300,
											"end": 3366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3300,
											"end": 3366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3504,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3378,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3492,
											"end": 3497,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3461,
											"end": 3498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3498,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3461,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3504,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3504,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3652,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 3510,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 3640,
											"end": 3645,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3609,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3596,
											"end": 3646,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3596,
											"end": 3646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3652,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3652,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3821,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3658,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3808,
											"end": 3813,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 3761,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3814,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3761,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3815,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4081,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3827,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3936,
											"end": 3940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3976,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 3977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 3977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3987,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 4071,
											"end": 4072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4056,
											"end": 4073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3987,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3987,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3987,
											"end": 4074,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3987,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4081,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4081,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4087,
											"end": 4204,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4087,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4196,
											"end": 4197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4198,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4327,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4210,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4321,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4450,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4333,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4439,
											"end": 4440,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4432,
											"end": 4444,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 5021,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 4469,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4542,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4590,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4553,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4553,
											"end": 4675,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 4594,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4594,
											"end": 4673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 4673,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 4594,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4553,
											"end": 4675,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4553,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4729,
											"end": 4735,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4726,
											"end": 4756,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 4840,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4723,
											"end": 4840,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4759,
											"end": 4838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4723,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4877,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 4878,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4849,
											"end": 4878,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4849,
											"end": 4878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4930,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4919,
											"end": 4923,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 4924,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4890,
											"end": 4931,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4887,
											"end": 5015,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4887,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 4887,
											"end": 5015,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4934,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4934,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4934,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4934,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4934,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4887,
											"end": 5015,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 4887,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 5021,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 5021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 5021,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 5021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 5021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 5021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5133,
											"end": 5139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5141,
											"end": 5147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5179,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5201,
											"end": 5208,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5197,
											"end": 5220,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5193,
											"end": 5226,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5310,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 5190,
											"end": 5310,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5229,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5229,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5308,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5229,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5310,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 5190,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 5395,
											"end": 5417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5374,
											"end": 5427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 5374,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5478,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5502,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 5547,
											"end": 5554,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5544,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5536,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5502,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5502,
											"end": 5555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5502,
											"end": 5555,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 5502,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5555,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5630,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 5675,
											"end": 5682,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5672,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5664,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5673,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5630,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5630,
											"end": 5683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5630,
											"end": 5683,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 5630,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5620,
											"end": 5683,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5620,
											"end": 5683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5734,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5758,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 5803,
											"end": 5810,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 5800,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 5779,
											"end": 5801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5758,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5758,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5758,
											"end": 5811,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 5758,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5811,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5703,
											"end": 5821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 5891,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5877,
											"end": 5886,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5893,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 5939,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5906,
											"end": 6023,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5906,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5906,
											"end": 6023,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5942,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5942,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5942,
											"end": 6021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5942,
											"end": 6021,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5942,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5906,
											"end": 6023,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5906,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6055,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6091,
											"end": 6100,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6087,
											"end": 6109,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6055,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6055,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6055,
											"end": 6119,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 6055,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6119,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6119,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 6129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 6136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6142,
											"end": 6291,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6142,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6284,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6211,
											"end": 6216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6285,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6285,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6142,
											"end": 6291,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6142,
											"end": 6291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6142,
											"end": 6291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6142,
											"end": 6291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6412,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6297,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 6399,
											"end": 6404,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6382,
											"end": 6405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6405,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 6382,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6418,
											"end": 6636,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 6418,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6549,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 6626,
											"end": 6627,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6624,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6608,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6560,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6629,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 6560,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6418,
											"end": 6636,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6418,
											"end": 6636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6418,
											"end": 6636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6418,
											"end": 6636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6418,
											"end": 6636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6810,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6642,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6725,
											"end": 6736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6747,
											"end": 6766,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6803,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6797,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6775,
											"end": 6804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6775,
											"end": 6804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6810,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6970,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6816,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "PUSH",
											"source": 8,
											"value": "3078303000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6944,
											"end": 6950,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6940,
											"end": 6954,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 6963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7339,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6976,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7117,
											"end": 7120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7196,
											"end": 7199,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7138,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 7138,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7138,
											"end": 7203,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 7138,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 7301,
											"end": 7304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 7212,
											"end": 7305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7305,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 7212,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7325,
											"end": 7328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7321,
											"end": 7333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 8204,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 7345,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7622,
											"end": 7626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7660,
											"end": 7663,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 7649,
											"end": 7658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7645,
											"end": 7664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7637,
											"end": 7664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7637,
											"end": 7664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7674,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 7742,
											"end": 7743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7740,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7727,
											"end": 7744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7674,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 7674,
											"end": 7745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7674,
											"end": 7745,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 7674,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 7823,
											"end": 7825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7812,
											"end": 7821,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7805,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 7755,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7827,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 7755,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7837,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7894,
											"end": 7903,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7887,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7837,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 7837,
											"end": 7909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7837,
											"end": 7909,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7837,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 7987,
											"end": 7989,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7972,
											"end": 7990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7963,
											"end": 7969,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 7919,
											"end": 7991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 7991,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 7919,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8029,
											"end": 8049,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8023,
											"end": 8026,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8008,
											"end": 8027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8001,
											"end": 8050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 8192,
											"end": 8196,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 8067,
											"end": 8197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8197,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 8067,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8059,
											"end": 8197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8059,
											"end": 8197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 8204,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 8204,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 8204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 8204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 8204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 8204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 8204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 8204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8210,
											"end": 8390,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 8210,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8335,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8255,
											"end": 8256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8336,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8359,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8352,
											"end": 8353,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8345,
											"end": 8360,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8384,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8590,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8396,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8436,
											"end": 8440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8456,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 8474,
											"end": 8475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8456,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 8456,
											"end": 8476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8456,
											"end": 8476,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 8456,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8451,
											"end": 8476,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8451,
											"end": 8476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 8490,
											"end": 8510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8510,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 8490,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8485,
											"end": 8510,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8485,
											"end": 8510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8531,
											"end": 8532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8519,
											"end": 8536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8519,
											"end": 8536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8558,
											"end": 8559,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8552,
											"end": 8556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8549,
											"end": 8560,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8546,
											"end": 8583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8546,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 8546,
											"end": 8583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 8563,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 8563,
											"end": 8581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8581,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 8563,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8546,
											"end": 8583,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 8546,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8590,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8590,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8787,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 8596,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8639,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 8673,
											"end": 8674,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 8655,
											"end": 8675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8650,
											"end": 8675,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8650,
											"end": 8675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 8707,
											"end": 8708,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 8689,
											"end": 8709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8709,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8732,
											"end": 8733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8729,
											"end": 8730,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8718,
											"end": 8734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8718,
											"end": 8734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8753,
											"end": 8756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 8751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8747,
											"end": 8757,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 8780,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 8744,
											"end": 8780,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 8760,
											"end": 8778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 8780,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 8744,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8787,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8962,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 8793,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8877,
											"end": 8888,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8917,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8906,
											"end": 8909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8918,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8951,
											"end": 8955,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 8949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 8956,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8927,
											"end": 8956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8927,
											"end": 8956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8962,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8962,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8968,
											"end": 9193,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 8968,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9142,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9104,
											"end": 9105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9102,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9085,
											"end": 9143,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9177,
											"end": 9185,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9172,
											"end": 9174,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9153,
											"end": 9186,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8968,
											"end": 9193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8968,
											"end": 9193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9199,
											"end": 9565,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 9199,
											"end": 9565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9341,
											"end": 9344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 9426,
											"end": 9428,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 9421,
											"end": 9424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9362,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9362,
											"end": 9429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9362,
											"end": 9429,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 9362,
											"end": 9429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 9527,
											"end": 9530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 9438,
											"end": 9531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9531,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 9438,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9556,
											"end": 9558,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9551,
											"end": 9554,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9547,
											"end": 9559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9559,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9199,
											"end": 9565,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9199,
											"end": 9565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9199,
											"end": 9565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9199,
											"end": 9565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9990,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 9571,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9775,
											"end": 9777,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9764,
											"end": 9773,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9760,
											"end": 9778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9752,
											"end": 9778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9752,
											"end": 9778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9824,
											"end": 9833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9814,
											"end": 9834,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9810,
											"end": 9811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9799,
											"end": 9808,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9788,
											"end": 9835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9978,
											"end": 9982,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 9852,
											"end": 9983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9983,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9852,
											"end": 9983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9844,
											"end": 9983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9844,
											"end": 9983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9990,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9571,
											"end": 9990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 10178,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 9996,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10136,
											"end": 10170,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10124,
											"end": 10130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10120,
											"end": 10134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10113,
											"end": 10171,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 10178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 10178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10184,
											"end": 10550,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 10184,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10326,
											"end": 10329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10347,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 10411,
											"end": 10413,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10406,
											"end": 10409,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10347,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 10347,
											"end": 10414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10347,
											"end": 10414,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 10347,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10340,
											"end": 10414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10340,
											"end": 10414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10423,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 10512,
											"end": 10515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10423,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 10423,
											"end": 10516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10423,
											"end": 10516,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 10423,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10541,
											"end": 10543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10536,
											"end": 10539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10532,
											"end": 10544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10525,
											"end": 10544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10525,
											"end": 10544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10184,
											"end": 10550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10184,
											"end": 10550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10184,
											"end": 10550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10184,
											"end": 10550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10975,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 10556,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10722,
											"end": 10726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10760,
											"end": 10762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10749,
											"end": 10758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10737,
											"end": 10763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10737,
											"end": 10763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10803,
											"end": 10807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10799,
											"end": 10819,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10795,
											"end": 10796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10780,
											"end": 10797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10773,
											"end": 10820,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10837,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10963,
											"end": 10967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10837,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 10837,
											"end": 10968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10837,
											"end": 10968,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10837,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10829,
											"end": 10968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10829,
											"end": 10968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10556,
											"end": 10975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftDeployer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"owner()": "8da5cb5b",
							"parentNFT()": "b8e33fb2",
							"renounceOwnership()": "715018a6",
							"setGenerator(address)": "4a7c7e4b",
							"stake(uint256,uint256)": "7b0472f0",
							"stakes(address)": "16934fc4",
							"stakingTime(address)": "583d42fd",
							"transferOwnership(address)": "f2fde38b",
							"unstake()": "2def6620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFT\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_generator\",\"type\":\"address\"}],\"name\":\"setGenerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftDeployer.sol\":\"NftStaker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NftDeployer.sol\":{\"keccak256\":\"0x71ee9cd2833028002270e58fd3c1f4e53eb3fd62d676ecfe9811ee1f705328ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1e76619417fa5ba07148f9a9c9ecc165f174c816accf2572fd9d92c6f5b2aaf\",\"dweb:/ipfs/QmZpKaF5PPXPTMVV7xTiig31C9czCPj9JyWZLvxjRYmokV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/NftDeployer.sol:NftStaker",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 383,
								"contract": "contracts/NftDeployer.sol:NftStaker",
								"label": "parentNFT",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC1155)234"
							},
							{
								"astId": 385,
								"contract": "contracts/NftDeployer.sol:NftStaker",
								"label": "generatorAddr",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 432,
								"contract": "contracts/NftDeployer.sol:NftStaker",
								"label": "stakes",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(Stake)392_storage)"
							},
							{
								"astId": 436,
								"contract": "contracts/NftDeployer.sol:NftStaker",
								"label": "stakingTime",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1155)234": {
								"encoding": "inplace",
								"label": "contract IERC1155",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)392_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NftStaker.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)392_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)392_storage": {
								"encoding": "inplace",
								"label": "struct NftStaker.Stake",
								"members": [
									{
										"astId": 387,
										"contract": "contracts/NftDeployer.sol:NftStaker",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 389,
										"contract": "contracts/NftDeployer.sol:NftStaker",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 391,
										"contract": "contracts/NftDeployer.sol:NftStaker",
										"label": "timestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/NftDeployer.sol:55:9:\n   |\n55 |         address operator,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1711,
					"file": "contracts/NftDeployer.sol",
					"start": 1695
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/NftDeployer.sol:56:9:\n   |\n56 |         address from,\n   |         ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1734,
					"file": "contracts/NftDeployer.sol",
					"start": 1722
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/NftDeployer.sol:57:9:\n   |\n57 |         uint256 id,\n   |         ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1755,
					"file": "contracts/NftDeployer.sol",
					"start": 1745
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/NftDeployer.sol:58:9:\n   |\n58 |         uint256 value,\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1779,
					"file": "contracts/NftDeployer.sol",
					"start": 1766
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/NftDeployer.sol:59:9:\n   |\n59 |         bytes calldata data\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1809,
					"file": "contracts/NftDeployer.sol",
					"start": 1790
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/NftDeployer.sol:54:6:\n   |\n54 |      function onERC1155Received(\n   |      ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1946,
					"file": "contracts/NftDeployer.sol",
					"start": 1658
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							331
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 332,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 331,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								331
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							234
						],
						"IERC165": [
							367
						]
					},
					"id": 235,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 235,
							"sourceUnit": 368,
							"src": "135:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "IERC165",
										"nameLocations": [
											"372:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 367,
										"src": "372:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:1"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "184:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 234,
							"linearizedBaseContracts": [
								234,
								367
							],
							"name": "IERC1155",
							"nameLocation": "360:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "386:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 131,
									"name": "TransferSingle",
									"nameLocation": "518:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "549:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "533:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "575:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "559:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "597:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "581:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "609:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "601:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "621:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "613:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:95:1"
									},
									"src": "512:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "634:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 146,
									"name": "TransferBatch",
									"nameLocation": "789:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "812:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "862:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "846:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "892:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "876:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "914:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "904:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 139,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "904:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 140,
													"nodeType": "ArrayTypeName",
													"src": "904:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "937:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "927:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 142,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "927:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 143,
													"nodeType": "ArrayTypeName",
													"src": "927:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:147:1"
									},
									"src": "783:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "956:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 155,
									"name": "ApprovalForAll",
									"nameLocation": "1114:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1145:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1129:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1154:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1185:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1180:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1180:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:66:1"
									},
									"src": "1108:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1201:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 162,
									"name": "URI",
									"nameLocation": "1555:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1566:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1559:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1589:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1573:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:34:1"
									},
									"src": "1549:44:1"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1599:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1786:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1804:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1796:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1821:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1813:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:29:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1848:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:1"
									},
									"scope": 234,
									"src": "1777:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "1863:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2065:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2099:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2080:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 174,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2080:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 175,
													"nodeType": "ArrayTypeName",
													"src": "2080:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2128:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2109:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 177,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2109:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 178,
													"nodeType": "ArrayTypeName",
													"src": "2109:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:53:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2180:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 181,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2180:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 182,
													"nodeType": "ArrayTypeName",
													"src": "2180:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:18:1"
									},
									"scope": 234,
									"src": "2056:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "2204:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2466:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2484:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2507:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2502:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2502:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:33:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:1"
									},
									"scope": 234,
									"src": "2457:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "2532:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2681:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2706:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2698:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2723:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2715:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:35:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2756:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2756:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:6:1"
									},
									"scope": 234,
									"src": "2672:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2768:556:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3338:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3372:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3364:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3394:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3386:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3414:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3406:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3434:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3426:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3465:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3450:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3450:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:121:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3484:0:1"
									},
									"scope": 234,
									"src": "3329:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "3491:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3895:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3926:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3956:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3948:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3987:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3968:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 223,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 224,
													"nodeType": "ArrayTypeName",
													"src": "3968:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "4000:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 226,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4000:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 227,
													"nodeType": "ArrayTypeName",
													"src": "4000:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4051:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "4036:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4036:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:145:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4070:0:1"
									},
									"scope": 234,
									"src": "3886:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 235,
							"src": "350:3723:1",
							"usedErrors": []
						}
					],
					"src": "110:3964:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							275
						],
						"IERC165": [
							367
						]
					},
					"id": 276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 236,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 368,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 239,
										"name": "IERC165",
										"nameLocations": [
											"262:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 367,
										"src": "262:7:2"
									},
									"id": 240,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 275,
							"linearizedBaseContracts": [
								275,
								367
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 253,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 275,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 262,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 263,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 271,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 275,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 276,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							309
						],
						"ERC165": [
							355
						],
						"IERC1155Receiver": [
							275
						],
						"IERC165": [
							367
						]
					},
					"id": 310,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 277,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 278,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 276,
							"src": "133:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 356,
							"src": "167:49:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 281,
										"name": "ERC165",
										"nameLocations": [
											"295:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 355,
										"src": "295:6:3"
									},
									"id": 282,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:3"
								},
								{
									"baseName": {
										"id": 283,
										"name": "IERC1155Receiver",
										"nameLocations": [
											"303:16:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 275,
										"src": "303:16:3"
									},
									"id": 284,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:3"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 309,
							"linearizedBaseContracts": [
								309,
								275,
								355,
								367
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										354,
										366
									],
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "495:113:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 295,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "512:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 297,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "532:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$275_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$275_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 296,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$275",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "550:11:3",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 303,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "589:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 301,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$309_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "571:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 354,
															"src": "565:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 294,
												"id": 306,
												"nodeType": "Return",
												"src": "505:96:3"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 289,
												"name": "ERC165",
												"nameLocations": [
													"463:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 355,
												"src": "463:6:3"
											},
											{
												"id": 290,
												"name": "IERC165",
												"nameLocations": [
													"471:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 367,
												"src": "471:7:3"
											}
										],
										"src": "454:25:3"
									},
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "414:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 286,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "489:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:3"
									},
									"scope": 309,
									"src": "387:221:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 310,
							"src": "258:352:3",
							"usedErrors": []
						}
					],
					"src": "108:503:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							331
						]
					},
					"id": 332,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 311,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 312,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 331,
							"linearizedBaseContracts": [
								331
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 317,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 316,
												"id": 319,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 331,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 326,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 325,
												"id": 328,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 331,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 332,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							355
						],
						"IERC165": [
							367
						]
					},
					"id": 356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 356,
							"sourceUnit": 368,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 336,
										"name": "IERC165",
										"nameLocations": [
											"754:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 367,
										"src": "754:7:5"
									},
									"id": 337,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 335,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 355,
							"linearizedBaseContracts": [
								355,
								367
							],
							"name": "ERC165",
							"nameLocation": "744:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										366
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "920:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 346,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "937:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 348,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "957:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$367_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$367_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 347,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$367",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 345,
												"id": 352,
												"nodeType": "Return",
												"src": "930:47:5"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 342,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:5"
									},
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "856:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 339,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:5"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "914:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:5"
									},
									"scope": 355,
									"src": "829:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 356,
							"src": "726:260:5",
							"usedErrors": []
						}
					],
					"src": "99:888:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							367
						]
					},
					"id": 368,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 358,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 367,
							"linearizedBaseContracts": [
								367
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 360,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 367,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 368,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"contracts/NftDeployer.sol": {
				"ast": {
					"absolutePath": "contracts/NftDeployer.sol",
					"exportedSymbols": {
						"Context": [
							331
						],
						"ERC1155Receiver": [
							309
						],
						"ERC165": [
							355
						],
						"IERC1155": [
							234
						],
						"IERC1155Receiver": [
							275
						],
						"IERC165": [
							367
						],
						"IGenerator": [
							378
						],
						"NftStaker": [
							546
						],
						"Ownable": [
							112
						]
					},
					"id": 547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 369,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 547,
							"sourceUnit": 235,
							"src": "70:60:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"id": 371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 547,
							"sourceUnit": 310,
							"src": "132:73:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 547,
							"sourceUnit": 113,
							"src": "207:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IGenerator",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IGenerator",
							"nameLocation": "273:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d34f6e72",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLuckyReward",
									"nameLocation": "300:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "323:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "315:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:15:7"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:0:7"
									},
									"scope": 378,
									"src": "291:48:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 547,
							"src": "263:79:7",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 379,
										"name": "Ownable",
										"nameLocations": [
											"366:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "366:7:7"
									},
									"id": 380,
									"nodeType": "InheritanceSpecifier",
									"src": "366:7:7"
								}
							],
							"canonicalName": "NftStaker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 546,
							"linearizedBaseContracts": [
								546,
								112,
								331
							],
							"name": "NftStaker",
							"nameLocation": "353:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b8e33fb2",
									"id": 383,
									"mutability": "mutable",
									"name": "parentNFT",
									"nameLocation": "397:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "381:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1155_$234",
										"typeString": "contract IERC1155"
									},
									"typeName": {
										"id": 382,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 381,
											"name": "IERC1155",
											"nameLocations": [
												"381:8:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 234,
											"src": "381:8:7"
										},
										"referencedDeclaration": 234,
										"src": "381:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$234",
											"typeString": "contract IERC1155"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 385,
									"mutability": "mutable",
									"name": "generatorAddr",
									"nameLocation": "421:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "413:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 384,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "413:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "NftStaker.Stake",
									"id": 392,
									"members": [
										{
											"constant": false,
											"id": 387,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "477:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "469:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 386,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "469:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 389,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "503:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "495:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 388,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "495:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 391,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "528:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "520:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 390,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "520:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "452:5:7",
									"nodeType": "StructDefinition",
									"scope": 546,
									"src": "445:100:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "566:83:7",
										"statements": [
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 395,
														"name": "parentNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "577:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$234",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307864386239333435383066634533356131314235384336443733614465453436386132383333666138",
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "598:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xd8b934580fcE35a11B58C6D73aDeE468a2833fa8"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 396,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "589:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$234_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "589:52:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$234",
															"typeString": "contract IERC1155"
														}
													},
													"src": "577:64:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$234",
														"typeString": "contract IERC1155"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "577:64:7"
											}
										]
									},
									"id": 402,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "564:2:7"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:0:7"
									},
									"scope": 546,
									"src": "553:96:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "716:44:7",
										"statements": [
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "generatorAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "726:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 410,
														"name": "_generator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "742:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "726:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "726:26:7"
											}
										]
									},
									"functionSelector": "4a7c7e4b",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 406,
												"name": "onlyOwner",
												"nameLocations": [
													"706:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "706:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "706:9:7"
										}
									],
									"name": "setGenerator",
									"nameLocation": "666:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "_generator",
												"nameLocation": "687:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "679:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:20:7"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "716:0:7"
									},
									"scope": 546,
									"src": "657:103:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "815:66:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "867:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "generatorAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "837:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 419,
																"name": "IGenerator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "826:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IGenerator_$378_$",
																	"typeString": "type(contract IGenerator)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGenerator_$378",
																"typeString": "contract IGenerator"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "852:14:7",
														"memberName": "getLuckyReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 377,
														"src": "826:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "826:47:7"
											}
										]
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLuckyReward",
									"nameLocation": "777:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "800:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "792:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:15:7"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "815:0:7"
									},
									"scope": 546,
									"src": "768:113:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 432,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "966:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "933:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$392_storage_$",
										"typeString": "mapping(address => struct NftStaker.Stake)"
									},
									"typeName": {
										"id": 431,
										"keyType": {
											"id": 428,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "941:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "933:25:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$392_storage_$",
											"typeString": "mapping(address => struct NftStaker.Stake)"
										},
										"valueType": {
											"id": 430,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 429,
												"name": "Stake",
												"nameLocations": [
													"952:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 392,
												"src": "952:5:7"
											},
											"referencedDeclaration": 392,
											"src": "952:5:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$392_storage_ptr",
												"typeString": "struct NftStaker.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "583d42fd",
									"id": 436,
									"mutability": "mutable",
									"name": "stakingTime",
									"nameLocation": "1058:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "1023:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 435,
										"keyType": {
											"id": 433,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1031:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1023:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 434,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1042:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "1141:173:7",
										"statements": [
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 443,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "1152:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$392_storage_$",
																"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
															}
														},
														"id": 446,
														"indexExpression": {
															"expression": {
																"id": 444,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1159:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1163:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1159:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1152:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$392_storage",
															"typeString": "struct NftStaker.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 448,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "1179:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 449,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "1189:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 450,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1198:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1204:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1198:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 447,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "1173:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$392_storage_ptr_$",
																"typeString": "type(struct NftStaker.Stake storage pointer)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1173:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$392_memory_ptr",
															"typeString": "struct NftStaker.Stake memory"
														}
													},
													"src": "1152:62:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$392_storage",
														"typeString": "struct NftStaker.Stake storage ref"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "1152:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 458,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1253:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1257:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1253:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 462,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1273:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftStaker_$546",
																		"typeString": "contract NftStaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftStaker_$546",
																		"typeString": "contract NftStaker"
																	}
																],
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1265:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 460,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1265:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1265:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "1280:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 465,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "1290:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30783030",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1299:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															},
															"value": "0x00"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															}
														],
														"expression": {
															"id": 455,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "1226:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$234",
																"typeString": "contract IERC1155"
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1236:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 217,
														"src": "1226:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1226:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "1226:80:7"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1093:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1107:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1099:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1125:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1117:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:35:7"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1141:0:7"
									},
									"scope": 546,
									"src": "1084:230:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "1349:294:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 478,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1395:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftStaker_$546",
																		"typeString": "contract NftStaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftStaker_$546",
																		"typeString": "contract NftStaker"
																	}
																],
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1387:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 476,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1387:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1387:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 480,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1402:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1406:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1402:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 482,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "1414:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$392_storage_$",
																		"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
																	}
																},
																"id": 485,
																"indexExpression": {
																	"expression": {
																		"id": 483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1421:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1425:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1421:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1414:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$392_storage",
																	"typeString": "struct NftStaker.Stake storage ref"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1433:7:7",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 387,
															"src": "1414:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 487,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "1442:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$392_storage_$",
																		"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
																	}
																},
																"id": 490,
																"indexExpression": {
																	"expression": {
																		"id": 488,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1449:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1453:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1449:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1442:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$392_storage",
																	"typeString": "struct NftStaker.Stake storage ref"
																}
															},
															"id": 491,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1461:6:7",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 389,
															"src": "1442:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30783030",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1469:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															},
															"value": "0x00"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															}
														],
														"expression": {
															"id": 473,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "1360:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$234",
																"typeString": "contract IERC1155"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1370:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 217,
														"src": "1360:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:116:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "1360:116:7"
											},
											{
												"expression": {
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 495,
															"name": "stakingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "1487:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 498,
														"indexExpression": {
															"expression": {
																"id": 496,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1499:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1503:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1499:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1487:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 499,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1515:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1521:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1515:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 501,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "1533:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$392_storage_$",
																				"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
																			}
																		},
																		"id": 504,
																		"indexExpression": {
																			"expression": {
																				"id": 502,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1540:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1544:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1540:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1533:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$392_storage",
																			"typeString": "struct NftStaker.Stake storage ref"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1552:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 391,
																	"src": "1533:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1515:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 507,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1514:48:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1487:75:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1487:75:7"
											},
											{
												"expression": {
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1573:25:7",
													"subExpression": {
														"baseExpression": {
															"id": 510,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "1580:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$392_storage_$",
																"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
															}
														},
														"id": 513,
														"indexExpression": {
															"expression": {
																"id": 511,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1587:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1591:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1587:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1580:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$392_storage",
															"typeString": "struct NftStaker.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "1573:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 517,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1624:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1628:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1624:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 516,
														"name": "getLuckyReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1609:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1609:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1609:26:7"
											}
										]
									},
									"functionSelector": "2def6620",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "1332:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1339:2:7"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1349:0:7"
									},
									"scope": 546,
									"src": "1323:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "1843:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f6e45524331313535526563656976656428616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329",
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1878:58:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	},
																	"value": "onERC1155Received(address,address,uint256,uint256,bytes)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	}
																],
																"id": 539,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1868:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1868:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1861:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 537,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "1861:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 536,
												"id": 543,
												"nodeType": "Return",
												"src": "1854:84:7"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1667:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1703:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1695:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1730:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1722:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1753:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1745:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1774:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1766:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1805:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1790:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1790:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:132:7"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1835:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 534,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1835:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:8:7"
									},
									"scope": 546,
									"src": "1658:288:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 547,
							"src": "344:1607:7",
							"usedErrors": []
						}
					],
					"src": "35:1918:7"
				},
				"id": 7
			}
		}
	}
}